{
    "title": "rkeeQmm0cX",
    "content": "Deep neural networks (DNNs) have emerged as a powerful solution this year for addressing longstanding issues in artificial intelligence. In this paper, DNNs are applied to three cyber security use cases: Android malware classification, incident detection, and fraud detection. The experiments show that DNNs outperform classical machine learning algorithms due to their ability to extract better features, resulting in higher accuracy. The best accuracy obtained by DNNs and XGBoost are 0.940 and 0.741 for Android malware classification, 1.00 and 0.997 for incident detection, and 0.972 and 0.916 for fraud detection, respectively. In the era of technical modernization, new opportunities and potential resources have emerged, but they also bring threats to the economy. Hacking has become common in organizations to steal data, highlighting the need for efficient fraud detection systems. Cyber security is crucial for protecting systems, networks, and data in the cyberspace. Malware remains a significant security threat on the Internet, causing harm by behaving differently than intended. Antivirus and blacklists are commonly used solutions. In the era of technical modernization, new opportunities and potential resources have emerged, but they also bring threats to the economy. Hacking has become common in organizations to steal data, highlighting the need for efficient fraud detection systems. Cyber security is crucial for protecting systems, networks, and data in the cyberspace. Malware remains a significant security threat on the Internet, causing harm by behaving differently than intended. Antivirus and blacklists are commonly used solutions. Deep learning approaches are prevailing in cyber security due to their remarkable performance in various AI challenges. This paper evaluates the effectiveness of deep neural networks for cyber security use cases such as Android malware classification, incident detection, and fraud detection. Section III discusses the background knowledge of deep neural networks (DNNs) and Section IV presents the proposed methodology including the description of the data set. Results are displayed in Section V, with the conclusion in Section VI. The related work for cyber security use cases, such as Android malware classification, incident detection, and fraud detection, is discussed. Static and dynamic analysis are commonly used approaches in Android malware detection, with static analysis preferred in Android devices for its advantageous features. Dynamic analysis, on the other hand, can detect metamorphic and polymorphic malwares. Commercial systems often use a combination of both static and dynamic analysis. BID3 evaluated traditional machine learning classifiers for android malware detection using permission and API calls as features. BID4 proposed MalDozer, using deep learning to detect Android malware. BID5 briefly discussed privacy and security issues in cloud computing. BID6 proposed machine learning based anomaly detection on different layers. BID7 discussed creating intrusion detection for cloud infrastructure. In BID7, issues in creating intrusion detection for cloud infrastructure were discussed, along with the combination of rule-based and machine learning systems. BID8 addressed security problems in the cloud and proposed an incident detection system. BID9 conducted a comparative study of traditional machine learning classifiers for identifying financial fraud. BID10 explored the use of data mining approaches for financial fraud detection. Deep learning, a sub-model of machine learning, has been widely used in cybersecurity, with a unique DNN architecture proposed for various cybersecurity use cases. The section aims to discuss DNN architecture and training techniques concisely. The section discusses the concepts of deep neural networks (DNNs) architecture and promising techniques for training DNNs. Artificial neural networks (ANNs) are represented as a directed graph with artificial neurons connected by edges, inspired by biological neural networks. A feed forward network (FFN) is a simple type of ANN, with a subset called multi-layer perceptron (MLP) consisting of input, hidden, and output layers. The number of hidden layers in MLP can be increased for complex data, forming an acyclic graph that passes information forward without relying on past input. The section discusses the architecture of deep neural networks, specifically focusing on multi-layer perceptron (MLP) units forming an acyclic graph for passing information forward. Rectified linear units (ReLU) are highlighted for their efficiency in accelerating the training process compared to traditional activation functions. TensorFlow and Keras are mentioned as tools used in conjunction for this purpose. Task 1 involves Android Malware Classification using a dataset of unique API information from APK files collected from the Opera Mobile Store. Task 2 focuses on Incident Detection using operational log files. Task 2 involves Incident Detection using operational log files from Unified Threat Management (UTM) of UniteCloud BID25, which is a rule-based real-time system for e-learning and e-research services in New Zealand. Each log file sample contains nine features representing different sensors in the UTM system. In order to determine the optimal learning rate, experiments were conducted with varying rates from 0.01 to 0.5 over 500 epochs. The highest accuracy of 10-fold cross validation was achieved at a learning rate of 0.1, with fluctuations at 0.2 and peaks at 0.35, 0.45, and 0.45. The decision to stick with a learning rate of 0.1 for subsequent experiments was based on the performance of more complex architectures within 500 epochs. Various network topologies were tested, including DNNs with 1 to 5 layers, each running for 500 epochs. Deep learning architectures generally learned normal category patterns within 600 epochs, while the learning of malicious category data varied in the number of epochs required. The deep learning architectures typically learn normal category patterns within 600 epochs, with varying epochs needed for malicious category data. Complex networks require more iterations for best accuracy. The best network topology was determined for each use case, with 4 layer DNNs performing well for Task 2 and Task 3, and 5 layer DNNs showing good performance for Task 1. A 5 layer DNNs network was chosen for further experiments, with details of the architecture shown in figures and tables. The proposed deep neural network architecture includes fully-connected layers, batch normalization, and dropout layers to prevent overfitting and speed up model training. The fully-connected layers map data into high dimensions for accurate output determination, using ReLU as the activation function. Dropout (0.01) and Batch Normalization are used between fully-connected layers. The deep neural network architecture includes fully-connected layers with activation functions for classification tasks. The final layer uses sigmoid for Task 1, softmax for Task 2, and softmax for Task 3. Prediction loss is calculated using binary cross entropy for Task 1 and Task 2, and categorical cross entropy for Task 3. The optimizer used is stochastic gradient descent (sgd) to minimize the loss. The model is evaluated on three cyber security use cases, including identifying Android malware and incident detection. The deep neural network architecture includes fully-connected layers with activation functions for classification tasks. XGBoost is used for supervised learning problems in cyber security use cases, such as identifying Android malware, incident detection, and fraud detection in financial transactions. The model is trained with input matrices of different shapes for each task and multiple hidden layers. XGBoost is based on Gradient Boosting and uses \"multi:softmax\" for classification. The tree depth is set to 20, and 10-fold cross-validation is performed for training accuracy. Data is loaded using Pandas, and missing values are handled. The experiment involves setting the \"max depth\" of the tree to 20 and performing 10-fold cross validation for training accuracy. Data is loaded using Pandas and missing values are replaced with 0. Task 1 involves representing data as a term-document matrix using scikit-learn BID11 count vectorizer. The proposed method achieves high accuracy on Task 2 compared to the winner of CDMC 2017. DNNs can improve results by adding hidden layers. The paper evaluates DNN performance for cyber security tasks like Android malware classification. The paper evaluates the performance of deep neural networks (DNNs) for cyber security tasks such as Android malware classification, incident detection, and fraud detection. DNNs outperform classical machine learning classifiers in all cases and can be further improved by adding more layers to the existing architectures. This direction is suggested for future work."
}