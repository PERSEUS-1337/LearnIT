{
    "title": "B1spAqUp-",
    "content": "Deconvolutional layers are commonly used in deep models for up-sampling, but they can lead to the checkerboard problem due to the lack of direct relationships among adjacent pixels. To address this, the PixelDCL is proposed to establish direct relationships among adjacent pixels on the up-sampled feature map. This method can replace deconvolutional layers without compromising the model's capabilities, resulting in more accurate segmentation outputs by considering spatial features like edges and shapes. PixelDCL improves semantic segmentation by considering spatial features like edges and shapes, outperforming deconvolutional layers. It also excels in image generation tasks by overcoming limitations. In deep learning, deconvolutional layers are used for tasks like image generation and semantic segmentation, but they suffer from checkerboard artifacts. Efforts to improve deconvolution operations have been limited. A new method called PixelDCL addresses spatial features and shapes, outperforming traditional deconvolutional layers in semantic segmentation and image generation tasks. In this work, a new method called PixelDCL is proposed to address the checkerboard problem in deconvolution operations. The method involves using a pixel deconvolutional layer to establish direct relationships among adjacent pixels on the output feature map, overcoming the issue of checkerboard artifacts. The proposed PixelDCL method addresses the checkerboard problem in deconvolution by establishing direct relationships among adjacent pixels on the output feature map. Experimental results show improved performance in semantic segmentation and image generation tasks. The method is related to PixelRNNs and PixelCNNs, which are generative models considering relationships among units on the same feature map. The PixelDCL method improves efficiency by replacing deconvolutional layers with a slight decrease in efficiency that can be overcome with an implementation trick. Deconvolutional layers are widely used in deep models for tasks like semantic segmentation and generative models. The method addresses checkerboard artifacts and establishes direct relationships among adjacent pixels on the output feature map. Deconvolutional layers in deep architectures use periodical shuffling of intermediate feature maps obtained by convolutional operations for up-sampling. This process can be decomposed into multiple convolutional operations depending on the up-sampling factor. The up-sampled output is generated by a deconvolutional layer, establishing no direct relationship among intermediate feature maps. The deconvolution process in deep architectures involves shuffling intermediate feature maps created by convolutional kernels, leading to checkerboard artifacts. To address this issue, a pixel deconvolutional operation is proposed to establish direct dependencies among the feature maps. The checkerboard problem in semantic segmentation is addressed using pixel deconvolutional layers. These layers ensure that adjacent pixels have similar values, effectively solving the checkerboard artifact issue. The proposed iPixelDCL operation establishes direct dependencies among feature maps, helping to mitigate the problem. iPixelDCL addresses the checkerboard problem in semantic segmentation by establishing direct dependencies among intermediate feature maps and adjacent pixels. This approach helps to solve the checkerboard artifact issue by ensuring that adjacent pixels have similar values. The design of sequential dependencies among intermediate feature maps in iPixelDCL allows for flexibility in how information is utilized, with dependencies on the input feature map being removed for some intermediate feature maps to improve performance. In PixelDCL, dependencies on the input feature map are removed for most intermediate feature maps to enhance computational efficiency and reduce trainable parameters. The purple feature map is based on the input feature map, while subsequent feature maps depend on previously generated ones. This simplifies pixel dependencies, with the red feature map being the final output. PixelDCL removes dependencies on the input feature map for most intermediate feature maps, enhancing computational efficiency. The orange feature map depends only on the purple feature map, while the green feature map relies on the purple and orange feature maps. The red feature map is conditioned on all three. This simplifies pixel dependencies and improves computational efficiency, outperforming models with complete connections. Pixel deconvolutional layers can replace deconvolutional layers in models like U-Net, VAEs, and GANs, improving performance. They are used for upsampling in semantic segmentation, image reconstruction, and generating large images. In experiments, pixel deconvolutional layers outperformed deconvolutional layers. The most common up-sampling operation increases input feature map size by a factor of two. The operation of pixel deconvolutional layers is to increase the size of input feature maps by a factor of two. This involves up-sampling a 4x4 feature map to an 8x8 feature map through convolutional operations. The intermediate feature maps are combined to generate the final output feature map, aiming to reduce sequential dependencies for better parallel computation and training efficiency. The proposed pixel deconvolutional methods improve performance in semantic segmentation tasks using the PASCAL 2012 and MSCOCO 2015 datasets. The models predict pixel labels without post-processing, trained from scratch with the U-Net architecture. The U-Net model used in semantic segmentation tasks includes four blocks in the encoder and decoder paths, with deconvolutional layers in the decoder for up-sampling feature maps. The number of feature maps is adjusted based on the dataset's classes, with the MSCOCO 2015 dataset having more classes than PASCAL 2012. The proposed pixel deconvolutional methods replace deconvolutional layers to improve segmentation results. The segmentation results of models using deconvolutional layers, iPixelDCL, and PixelDCL are compared with ground truth. Different kernel sizes are used in the models for evaluation. Fine-tuning experiments are conducted on the DeepLab-ResNet model, which is then up-sampled to recover the original dimensions of the output image. External data and finetuning from ResNet101 are utilized to improve model performance. The input image is up-sampled using three blocks, each containing a deconvolutional layer followed by a convolutional layer. Results show that models using iPixelDCL and PixelDCL capture local information better than regular deconvolutional layers, producing smoother outputs for semantic segmentation. The use of pixel deconvolutional layers considers spatial features like edges and shapes, improving label predictions for adjacent pixels. The proposed models using PixelDCL produce smoother outputs than deconvolution. PixelDCL is more efficient with fewer parameters, outperforming iPixelDCL in most cases. U-Net models with PixelDCL have better performance than regular deconvolution. iPixelDCL performs the best in fine-tuned models from Deeplab-ResNet. Pixel deconvolution yields better results in mean IOU than regular deconvolution. The dataset used for image generation is CelebFaces attributes (CelebA). Images are preprocessed to retain only facial information. The image generation task is to reconstruct faces excluding backgrounds. The size of images is 64 \u00d7 64 \u00d7 3. The base model for image generation is a standard variational auto-encoder (VAE) with deconvolutional layers. PixelDCL is proposed to replace deconvolutional layers in the decoder, resulting in smoother outputs without checkerboard artifacts. The proposed PixelDCL replaces deconvolutional layers in the decoder to overcome checkerboard artifacts in generated images. Results show that PixelDCL considers local spatial information, producing photo-realistic images without the checkerboard issue. Comparisons of training and prediction times of U-Net models using DCL, iPixelDCL, and PixelDCL for up-sampling are shown in TAB4. The model using PixelDCL is more efficient despite slightly longer times due to sequential generation of intermediate feature maps. In this work, PixelDCL is proposed to address the checkerboard problem in deconvolutional layers by establishing direct dependencies among intermediate feature maps. PixelDCL generates feature maps sequentially to ensure adjacent pixels in output maps are related, effectively overcoming checkerboard artifacts in image generation tasks. The model using PixelDCL is more efficient despite slightly longer training and prediction times compared to models using DCL. PixelDCL addresses checkerboard artifacts by establishing direct dependencies among feature maps, leading to better segmentation results. It can be applied to a broader class of models like GANs in the future."
}