{
    "title": "rk1J969Xz",
    "content": "Estimating image location solely based on image contents is challenging due to contextual complexities. This work introduces a novel global meshing strategy for image geolocation, overcoming data limitations with various training procedures. Incorporating additional information improves geolocation model performance, showing Delaunay triangles as effective meshes for low volume scenarios. Meta data like time of posting and user albuming can enhance geolocation accuracy by up to 11% at the country level. Delaunay triangles are effective for geolocation in low volume scenarios, outperforming quad trees with less training data. Incorporating time of posting and user albuming can improve geolocation accuracy by up to 11% at the country level and 3% at the city level. Advancements in deep learning have expanded the capabilities of machine learning beyond image classification. Recent methods allow for deeper analysis of contextual information in images, enabling researchers to ask more complex questions like determining the geographic origin of a picture. However, this task is challenging due to uneven distribution of geo-tagged image data and potential issues with conflicting or ambiguous geographic information. The work focuses on content-based image geolocation, identifying the geographic origin of ground-level images. With the rise of image-based social data, inferring geographic context from images without explicit geolocation information poses a significant challenge. In content-based image geolocation, inferring geographic context from images without explicit geolocation information is a significant challenge. Various approaches have been considered for geolocation from image content, including global geolocation from ground-based imagery and instance-level scene retrieval for geolocation of imagery. Recent work in global geolocation from ground-based imagery utilizes a multi-class approach with one-hot encoding. Instance-level scene retrieval is also common for geolocation of imagery. Prior work includes data sampling strategies for large-scale classification problems in social media applications, such as weighted sampling of minority classes during deep learning model training. Biasing class selection with random noising is a known method to expose models to more examples of rare classes. In social media geolocation, biasing class selection with random noising is a common method to expose models to rare classes. Researchers have considered sampling strategies where individual users are only seen once per training epoch. Different models are explored, including purely geolocation models, models incorporating time information, and models using user-album inputs. The study contributes insights on alternative geolocation methods and the use of time and user information to enhance geolocation accuracy. Data is collected from YFCC100M BID17 for training and validation. The study explores user-album inputs as a model (M3) for geolocation, emphasizing the use of alternative mesh and time/user information. Data is collected from YFCC100M BID17 for training and validation, with ground truth GPS locations assumed to be accurate. Each image in YFCC100M has associated meta data including user-id and posted time, impacting the true GPS location based on upload time. The approach for global-scale geolocation modeling is similar to classification methods. The study focuses on geolocation modeling using user-album inputs and alternative mesh and time/user information. Data from YFCC100M is used for training and validation, with ground truth GPS locations assumed accurate. The global-scale geolocation model involves classifying images based on upload time, with a grid mesh forming classification regions. The distribution of image longitude varies by the time of day an image is posted, as shown in Figure 1. The boxplot indicates that images posted at 21:00 UTC are typically far from zero longitude. The study utilizes a Delaunay triangle-based meshing architecture for geolocation modeling, which differs from the PlaNet approach using a quad-tree mesh. The triangular mesh is deployed to capture water/land interfaces without additional refinement needed by quadtree meshes, although it loses refinement level information. The study uses a Delaunay triangle-based mesh for geolocation modeling, which is more adaptive to Earth's geometric features. Triangular meshes can capture water/land interfaces without extra refinement. Mesh refinement is controlled by adaptively dividing cells based on the number of examples. Parameters for mesh initialization were not explored. The coarse and fine meshes are shown in Figure 2.1.1. The geolocation classification mesh can be tuned. The study utilizes a Delaunay triangle-based mesh for geolocation modeling, with mesh refinement controlled by dividing cells based on the number of examples. The mesh parameters for three meshes are shown in Table 1, covering a range of structures. The fine P mesh replicates PlaNet's parameters but with a different methodology and dataset. Figure 2 displays the classification structure for the coarse and fine meshes, with red triangles indicating regions for training. The coarse mesh was generated with an early dataset of 2M YFCC100M images. The study utilizes a Delaunay triangle-based mesh for geolocation modeling, with mesh refinement based on the number of examples. The fine mesh better represents geographic regions, such as the water/land interface of Spain and Portugal. The Inception v4 architecture is used to develop the mesh-based classification geolocation model, differing from the Inception v3 architecture used in PlaNet. Cells are classified using a softmax approach, similar to PlaNet. The study presents a mesh-based classification geolocation model using a neural network architecture different from PlaNet. Cells are labeled based on the cell centroid in latitudelongitude, with improvements expected for coarse meshes. Models are evaluated by calculating the distance between predicted and ground-truth GPS coordinates. The study introduces a mesh-based geolocation model using neural networks, evaluating models based on the distance between predicted and ground-truth GPS coordinates. Error thresholds are defined for different geographical regions, and image metadata such as user id and posting time are utilized in the model. The study introduces a mesh-based geolocation model using neural networks, evaluating models based on the distance between predicted and ground-truth GPS coordinates. Error thresholds are defined for different geographical regions. Every YFCC100M image has associated meta data including user id and posting time, which is utilized in model M2. The model incorporates time dependence after conditioning on image content, with variables appended to the output of the geolocation model to form a new input. Model M3 geolocates multiple images from a single user using an LSTM model. Model M3, in conjunction with geolocation model M1, utilizes fit probabilities from softmax layer to aid in geolocating multiple images from a single user. The Bidirectional LSTMs in M3 capitalize on correlations in a user's images, organizing them sequentially in time. All user images are grouped into albums of size 24, with padding and masking used as needed. During training, a user is limited to one random album per epoch. The research question is whether the success seen in BID19 extends to a less informative organization of images. All user images are grouped into albums of size 24, with padding and masking used as necessary. Album averaging, as proposed by Weyand et al. (2016), assigns images in an album to a mesh cell based on the highest average probability, increasing accuracy by borrowing information across related images. A similar concept is applied to user images to determine location. LSTM on a time-ordered sequence of images was considered but did not significantly improve performance beyond just adding time to the model. The study explores the use of mesh grid cells for geolocation accuracy in image albums. LSTM on time-ordered images did not significantly improve performance. Meshing parameters were analyzed, showing a trade-off between fine-grain and coarse-grain geolocation accuracy. The study investigates mesh grid cells for geolocation accuracy in image albums, showing a trade-off between fine-grain and coarse-grain geolocation. Meshing parameters are analyzed, with results displayed in TAB1 and TAB2. The impact of classifying on training data centroid versus cell centroid is compared, with a dramatic improvement for the coarse mesh. The BID20 model is used with indoor-outdoor labels for geolocation inference on outdoor imagery, resulting in a 4-8% accuracy improvement for region/country localities. The Im2GPS testing data is utilized to test the model on 237 images from BID6. The study explores mesh grid cells for geolocation accuracy in image albums, showing a trade-off between fine-grain and coarse-grain geolocation. Results in TAB1 and TAB2 display the analysis of meshing parameters. The BID20 model, not re-trained on outdoor imagery, shows a 4-8% accuracy improvement for region/country localities. Im2GPS testing data is used to test the model on 237 images from BID6, demonstrating generality in approach. Time usage slightly improves geolocation accuracy, as shown in TAB2. The study compares geolocation accuracy using coarse and fine mesh models, with time usage showing a slight improvement in accuracy. The difference in errors between using time (M2) and not using time (M1) is statistically significant, indicating that the use of time-inputs is beneficial for geolocation. The study compares geolocation accuracy using coarse and fine mesh models, with time usage showing a slight improvement in accuracy. The difference in errors between using time (M2) and not using time (M1) is statistically significant, indicating that the use of time-inputs is beneficial for geolocation. The Wilcoxon-Signed-Test for paired observations is used to test the difference, which is highly significant (p-value < 10 \u221216). The distribution of errors is mean shifted, with the median error for coarse mesh e1 being 1627 km and for e2 being 1262 km. Time input models have lower-bias class probabilities, and cross-entropy is optimized in training for both models. KL-Divergence is calculated for each model to minimize class biases. The study compares geolocation accuracy using coarse and fine mesh models, with time usage showing a slight improvement in accuracy. User-Averaging is incorporated into results to minimize class biases. KL-Divergence is calculated for each model to compare model output class frequencies to true class frequencies. Albums are a better approach to reduce bias, with LSTMs on user albums having the lowest class bias. Improved accuracy can come with higher bias, as observed in the study comparing geolocation models using coarse and fine mesh. User albums are a better approach to reduce bias, with LSTMs on user albums showing the lowest class bias. Time of day usage was found to increase accuracy and lower bias in the models. Conditioning on latent variables can improve geolocation models. In the study comparing geolocation models using coarse and fine mesh, accuracy is limited at street level. Time of day usage improves accuracy and reduces bias in the models. Conditioning on latent variables can enhance geolocation models. Time information significantly improves both meshes. Accounting for indoor/outdoor scenes in images affects validation accuracy. Future work could involve incorporating the probability of an image being outdoor into the model. Future work includes incorporating the probability of an image being outdoor into the geolocation model. A coarse mesh is shown to be superior for 200 km resolutions, while a Delunary triangle-based mesh allows for accurate models with fewer training examples. Street level geoinferencing is not practical with a coarse mesh, and a fine mesh may perform better at smaller resolutions. The fine mesh should perform no worse than a coarse mesh for 200 km resolutions. Using a Delunary triangle-based mesh allows for accurate models with fewer training examples. Images were divided into training and validation sets, and a training procedure was developed for large models. Training procedure developed for large models with large meshes (> 4,000 mesh regions) involved pre-training on ImageNet with Adagrad BID3, increasing training examples each epoch by 6%, biasing classes by oversampling minority classes initially, reducing class bias after each training cycle, and training the final model with SGD using a linearly decreasing learning rate. The final model was trained with SGD, using a linearly decreasing learning rate reduced at 4% with each epoch, without class biasing and with the full dataset per epoch. The layers of M2 are described in TAB0. M2 is trained using He initializations, initial iterations of Adaboost, followed by ADAM at learning rates of 0.005 and 0.001. Early stopping is used to detect a sustained decrease in validation accuracy. The generality of the M1 classification model is demonstrated by performing a query-by-example on the 2K random Im2GPS. The Church of the Savior on Spilled Blood is not present in the training data or the 2K random dataset. Each image is assigned a categorical indicator variable. A latent class distribution is assumed constant between training, testing, and application. The last layer output from networks is a softmax model. The KL-divergence between q and p should be low if training is done well. The entropy of p and q is also considered for completeness."
}