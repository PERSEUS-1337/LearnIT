{
    "title": "rk1J969Xz",
    "content": "Estimating image location based on image content is challenging due to the need for contextual information. Current models struggle to address all complexities. This research introduces a global meshing strategy and training procedures to improve image geolocation inferencing. In this work, Delaunay triangles are shown to be effective for geolocation in low volume scenarios compared to quad trees. Additional information like time of posting and user metadata can improve geolocation accuracy by up to 11% for country-level and 3% for city-level localities. Advancements in deep learning have expanded the possibilities of machine learning beyond image classification. Recent methods allow for deeper analysis of contextual information in images, enabling researchers to ask more complex questions like determining the geographic origin of a picture. Determining the geographic origin of ground-level images poses challenges due to uneven distribution of geo-tagged image data, conflicting information, and ambiguity in geographic terms. The work focuses on content-based image geolocation, identifying the geographic origin of ground-level images in the era of increasing image and video content on social platforms. Geo-tagged information in images is often incomplete or missing, making it a significant challenge. The paper discusses the challenges of geolocating ground-level images due to incomplete or missing geo-tagged information. Various approaches for geolocation from image content have been considered, building on recent work in global geolocation from ground-based imagery. The paper discusses geolocating ground-level images using multi-class approach with one-hot encoding. Instance-level scene retrieval is used for geolocation based on similarity to geotagged imagery. Prior work includes data sampling strategies for large-scale classification problems. In the context of geolocating ground-level images, Kordopatis-Zilos et al. (2016) explores weighted sampling of minority classes in deep learning models for social media applications. The class selection bias during training aims to address the challenge of rare classes by randomly selecting images without user consideration. The study focuses on geolocating images in social media, considering the influence of latent variables and communities. Different models are used: M1 for geolocation based on image content, M2 incorporating time information, and M3 using user-album inputs. Data from YFCC100M BID17 is utilized for training and validation. The study utilizes data from YFCC100M BID17 for training and validation, with PlaNet using a larger dataset for model development. Each YFCC100M image has associated metadata including user-id and posted-time. The ground truth GPS location is assumed to be accurate based on previous results. The global-scale geolocation model described in this work utilizes a classification approach similar to PlaNet BID19. The globe is divided into a grid for classification regions, with an image classifier trained to determine the true GPS location of uploaded images. The distribution of image longitude varies by the time of day, as shown in Figure 1. The prior distribution for image longitude differs by the time of day images are posted. It takes less evidence to predict a longitude close to zero at 01:00 UTC than at 21:00 UTC. The classification structure uses a Delaunay triangle-based meshing architecture to assign geo-label probabilities to input imagery. The classification structure utilizes a Delaunay triangle-based meshing architecture to generate mesh cells that conserve surface area. This approach is more adaptive to Earth's geometric features compared to a quad-tree mesh, allowing for easier capture of water/land interfaces. However, the triangular mesh lacks refinement level information present in a structured quad-tree approach. The structured quad-tree approach allows for controlled granularity in mesh refinement. Cells are adaptively refined based on the number of examples they contain, with a refinement limit and minimum examples criteria. The three meshes in the study were generated using specific options outlined in Table 1. Parameters for mesh initialization were not explored, with each mesh starting with a 31 x 31 structured grid. The geolocation classification mesh can be adjusted by modifying the refinement level to control the number of cells in each mesh cell. Three meshes were studied, covering a range of structures with fine P replicating PlaNet's parameters but generated differently. The fine mesh classification structure in this study was generated using a different methodology and dataset compared to the coarse mesh. The fine mesh, created with all available imagery, better represents geographic regions such as the water/land interface of Spain. The Inception v4 convolutional neural network architecture is used to develop a mesh-based classification geolocation model in this work. Cells are labeled based on the cell centroid in latitudelongitude, differing from the approach used in PlaNet. An alternate approach is used to compute the \"center-of-mass\" of the training data in a containing cell for geolocation. Significant improvements are expected for coarse meshes, as seen in FIG2.1.1 where the cell centroid on the coast of Spain is inaccurate. This can lead to higher errors, especially in high-density population regions. Models are evaluated by measuring the distance between the predicted cell and the ground-truth GPS. The distance between predicted and ground-truth GPS coordinates is calculated using a great-circle distance formula. Error thresholds of 1 km, 25 km, 200 km, 750 km, and 2500 km are used to represent different localities. The 200 km threshold for geolocation classes in YFCC100M images is based on user id and posting time data. Model M2 uses one-hot encoding for image classification. Time dependence is assumed based on evidence in the figure. Model M2 incorporates time dependence after conditioning on image content by appending related variables to the output of the geolocation model (M1). The top 10 maximum entries of the fit probabilities vector from M1 are retained, while the rest are set to 0. Model M3 geolocates multiple images from a single user using an LSTM model, leveraging information from other images posted by the user. Bidirectional LSTMs are utilized for this purpose. The Bidirectional LSTMs in M3 organize a single user's images sequentially in time, without further organization by topic or location. All user images are grouped into albums of size 24, with padding and masking used if necessary. The research question is whether the success seen in BID19 extends to this less informative image organization. During training, a user was limited to a single random album per epoch, with album averaging considered for increased accuracy by borrowing information across related images. User images were also analyzed based on the highest average probability across all images associated with the posting user. During training, user-averaging was used to increase accuracy by borrowing information across related images. LSTM on a time-ordered sequence of images was considered, but did not significantly improve performance. The output of M1 is filtered to output only the top 10 mesh cell probabilities, re-normalized to sum to 1. Training of M2 and M3 was done on the validation data of M1. Time inputs are concatenated to filtered and normalized outputs for a new training step. The results of investigating meshing parameters show a trade-off between fine-grain and coarse-grain geolocation. Coarse mesh improves large granularity geolocation, while fine mesh performs better at finer-granularities. This observation aligns with previous findings. Additionally, the impact of classifying on the centroid of training data is compared to using the cell centroid. The BID20 model, used with indoor-outdoor labels, filters geolocation inference on outdoor imagery without re-training the geolocation model. Results in TAB2 show a 4-8% accuracy improvement for region/country localities, with a smaller boost in smaller-scale regions using Im2GPS testing data. The M1 classification model shows improved performance compared to BID19 with less training data and classification regions. The coarse mesh M1 model outperforms PlaNet for large regions. Time usage enhances geolocation accuracy in two ways. Using time improves geolocation accuracy in two ways, with a slight gain in accuracy for both coarse and fine mesh. The difference in error between using time (M2) and not using time (M1) is statistically significant across all error calculations. The difference in error between using time (M2) and not using time (M1) is statistically significant, with a p-value < 10^-16. The distribution of errors is mean shifted, but not uniformly to lower error, nor are images universally predicted closer to the truth. The median of coarse mesh e1 is 1627 km. The median of coarse mesh e2 is 1262 km TAB5. Time input models show lower-bias class probabilities. Cross-entropy was optimized in training for both the classification model (M1) and time-inputs models (M2) to minimize class biases. KL-Divergence is calculated for each model to compare observed class proportions for true and predicted labels in validation. The KL-divergence of the model output class frequencies compared to the true class frequencies in validation are in TAB5. \"User-Averaging\" is used for better accuracy but introduces bias in cell count frequency. Using average probability vectors to predict images may result in higher bias. Albums are a better approach to reduce bias in cross-entropy optimization during training. LSTMs on user albums showed the lowest class bias due to bias-reducing cross-entropy optimization. Different models were compared for accuracy at various spatial resolutions using time meta information. Coarse and fine mesh models were evaluated based on triangle count across the globe. The best observed accuracy is highlighted in the table. The \"Coarse Mesh\" and \"Fine Mesh Best Possible\" are theoretical models representing the highest possible accuracy if every image was correctly classified. Conditioning on latent variables can improve geolocation models, with time of day being a significant factor in increasing accuracy and reducing bias. Time information was found to make statistically significant improvements to geolocation models at both coarse and fine mesh levels. This approach can be applied to other meta data variables for further enhancements. Conditioning on meta data variables like indoor/outdoor scenes can improve validation accuracy in geolocation models. Future work could involve incorporating the probability of an image being outdoor into the model. Increasing grid granularity reduces accuracy at country/regional levels but improves accuracy at street/city levels. Increasing grid granularity can improve accuracy at street and city levels, as shown in Table 6. A fine mesh may perform better than a coarse mesh for geolocation, but a coarse mesh is superior for 200 km resolutions. Using a Delunary triangle-based mesh for both coarse and fine grids allows for training accurate models. Using a Delunary triangle-based mesh enables accurate model training with fewer examples. Images were split into training and validation sets, with validation data further divided for training time-based models. Softmax classification struggles with large output classes. Initial experiments with large meshes (> 4,000 mesh regions) led to the development of a training procedure to overcome challenges. The approach involved training a model pre-trained on ImageNet with Adagrad BID3, increasing training examples each epoch by 6%, and biasing classes by oversampling minority classes. The final model was trained with SGD, using a linearly decreasing learning rate reduced at 4% with each epoch, without class biasing and with the full dataset per epoch. The initial value of the learning rate varied for each model (between 0.004 and 0.02). The values of those hyperparameters were empirically determined. The layers of M2 are described in TAB0. The hyperparameters for M2 were empirically determined. M2 is trained using He initializations, Adaboost, and ADAM with learning rates of 0.005 and 0.001. Early stopping is used to detect a decrease in validation accuracy. The generality of the M1 classification model is demonstrated by performing a query-by-example on the 2K random Im2GPS dataset. The Church of the Savior on Spilled Blood image was not present in the training data or the 2K random dataset. The last layer output from networks is a softmax model for classification distribution. The preference is for accurate models, but unbiased models are also considered. If training is effective, the latent class distribution is assumed to be constant between training, testing, and application. The last layer output from networks is a softmax model for classification distribution, leaning towards unbiased models. Effective training results in low KL-divergence between q and p, with consideration for the entropy of p and q."
}