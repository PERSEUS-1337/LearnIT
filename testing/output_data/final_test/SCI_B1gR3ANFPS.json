{
    "title": "B1gR3ANFPS",
    "content": "System identification is the process of building a mathematical model of an unknown system from measurements of its inputs and outputs. An algorithm called SISL is presented for non-linear offline system identification from partial observations. It iteratively infers the system's full state through non-linear optimization and updates the model parameters. The algorithm is tested on a simulated system of coupled Lorenz attractors and an aerobatic helicopter, showing its ability to identify high-dimensional systems and predict acceleration better than state-of-the-art approaches. In this work, the focus is on learning dynamics models of partially observed, high-dimensional non-linear systems, where the system's state cannot be inferred from a single observation but requires inference over a time-series of observations. This problem arises in robotics domains, where direct measurements of a robot's pose and velocity are available, but inferring the system's dynamics from partial observations is challenging. Learning dynamics models for partially observed systems is challenging in robotics. Direct measurements of a robot's pose and velocity are available, but inferring the system's dynamics from partial observations is difficult. Abbeel et al. (2010) found that mapping only the helicopter's pose and velocity to its acceleration was inaccurate for predicting aggressive maneuvers due to the airflow affecting the dynamics. System identification techniques vary for linear or non-linear systems with partially or fully observed states, and can be applied online or in a batch-offline setting. This work presents an approach to offline identification of non-linear and partially observed systems using equation-error methods for fully observed states. In partially observed settings, various black-box approaches like autoregressive models and recurrent neural networks are used to predict observations from input time-series. In offline identification of non-linear and partially observed systems, structured, parameterized models can be used with prior knowledge to train with less data. Techniques like Expectation-Maximization are often used to identify these models. In non-linear or non-Gaussian systems, methods like Particle Smoothing and Extended Kalman Smoothing are used for updating system dynamics estimates. However, these methods become intractable in high-dimensional state spaces due to the curse of dimensionality. The SISL algorithm is designed for high-dimensional, nonlinear, and partially observed systems. It uses non-linear programming to find the ML point estimate of unobserved states in the E-step, and then improves system parameter estimates in the M-step. The algorithm SISL is tailored for high-dimensional, nonlinear, and partially observed systems. It utilizes non-linear programming to estimate unobserved states in the E-step and refines system parameters in the M-step. The approach of using ML point-estimates as surrogates for unobserved state-trajectories allows for scalability to complex problems. The algorithm SISL is designed for high-dimensional, nonlinear, and partially observed systems. It uses non-linear programming to estimate unobserved states and refines system parameters. The algorithm is demonstrated on identifying parameters of Lorenz attractors and dynamics of an aerobatic helicopter, comparing against various approaches. The algorithm assumes a batch of trajectories with observations of a dynamical system evolving over a time horizon, possibly forced by a known input sequence. The algorithm SISL is designed for high-dimensional, nonlinear, and partially observed systems. It aims to find parameters that maximize the likelihood of observations by using particle-based EM techniques to approximate the integral. Particle-based methods may struggle with high-dimensional spaces. The algorithm SISL is designed for high-dimensional, nonlinear, and partially observed systems. It seeks point estimates for the likelihood-maximizing state sequence using non-linear programming. The maximized surrogate objective is equivalent to the original objective if the distribution over x 1:T given y 1:T and \u03b8 is well-approximated by its ML point-estimate. The SISL algorithm is designed for high-dimensional, nonlinear, and partially observed systems. It seeks point estimates for the likelihood-maximizing state sequence using non-linear programming. The objective J(x 1:T , \u03b8) is maximized by jointly optimizing x 1:T and \u03b8 to yield \u03b8 SISL. An iterative approach similar to EM is taken, performing block-coordinate ascent on J(x 1:T , \u03b8). Smoothing is done by holding \u03b8 constant and finding the ML point-estimate for x 1:T, while learning involves holding x 1:T constant and finding the optimal \u03b8. Regularizers \u03c1 x and \u03c1 \u03b8 are used to scale a soft trust-region regularizer. The SISL algorithm is used for high-dimensional, nonlinear, and partially observed systems. It involves optimizing parameters using non-linear programming and a soft trust-region regularizer. The algorithm iterates between smoothing and learning steps until convergence. Experiments show its capability in identifying complex systems in simulation and real-world scenarios. The SISL algorithm is utilized for high-dimensional, nonlinear, and partially observed systems. It optimizes parameters through non-linear programming and a soft trust-region regularizer. The algorithm alternates between smoothing and learning steps until convergence, demonstrating its effectiveness in identifying complex systems in simulations and real-world scenarios. In a didactic experiment, it is shown that SISL learns unbiased parameter estimates for close-to-deterministic systems and scales to high-dimensional problems where particle-smoothing is challenging. The experiment uses a system of coupled Lorenz attractors known for chaotic behavior and their application in non-linear atmospheric and fluid flow models. The dynamics of the system involve a matrix H and parameters (\u03c3 k , \u03c1 k , \u03b2 k ) set to values (10, 28, 8/3). Chaotic behavior is generated by sampling entries of H from a normal distribution. The system is partially observed with observation y found from x using a known matrix C and observation noise v sampled from a Gaussian distribution. Experiments simulate the system for T = 128 timesteps with a sample rate of \u2206t = 0.04s using a 4th-order Runge-Kutta method. Initial conditions for each trajectory are sampled accordingly. To test unbiased parameter estimates, a single Lorenz system with known parameters is simulated with varying process and observation noise. Using SISL on sampled trajectories, parameter estimates are obtained. Results show unbiased estimates for \u03c3 and \u03c1, but bias in \u03b2 with increased process noise, not observation noise. The performance of particle smoothing (PS) does not scale well to high-dimensional systems. Comparison between two and six coupled Lorenz systems shows the number of particles required for reliable characterization of the distribution over states x 1:T. The experiment supports the assumption that SISL is sound for systems evolving close to deterministically but can become biased with increased process noise. The experiment demonstrates that particle smoothing struggles with high-dimensional systems, requiring an intractable number of particles to characterize the posterior distribution accurately. This limitation makes particle-based EM methods unsuitable for complex problems. In contrast, Sequential Importance Sampling with Likelihood (SISL) shows promise in identifying high-dimensional systems, as evidenced by successfully estimating the dynamics of an 18-dimensional system. In contrast to particle smoothing, Sequential Importance Sampling with Likelihood (SISL) can accurately estimate the dynamics of an 18-dimensional system by converging to more accurate estimates as the number of trajectories increases during training. The error in the estimated dynamics tends towards zero with an increasing number of trajectories used in training, showing SISL's ability to identify high-dimensional systems. The experiments demonstrate that SISL can accurately estimate high-dimensional, non-linear systems that are challenging for particle-based methods. Next, SISL is used to analyze the dynamics of an aerobatic helicopter, a complex system affected by unobserved states. The forces on the helicopter depend on the induced state of the fluid around it, which cannot be directly observed. Punjani & Abbeel (2015) use Takens theorem to reconstruct the system's state from lagged observations of state measurements and control commands to predict the forces acting on the helicopter. This approach simplifies the system's state representation but may require a large number of lagged observations for complex phenomena. To simplify control design and state estimation, a trade-off between history duration and sample frequency is needed to avoid high-dimensional states. Instead of using a large number of lagged observations, the focus is on explicitly modeling unobserved states affecting the system. Data from the Stanford Autonomous Helicopter Project is used to predict the helicopter's acceleration from input vectors containing its current state and control commands. The train, test, and validation sets contain 466, 100, and 101 trajectories of 500 time-steps each. A simple success metric is the root mean squared prediction error. A neural network is trained to map the current helicopter state and control commands to accelerations. This model is compared to the work of Punjani & Abbeel (2015) which uses lagged observations to predict acceleration. The study compares a neural network model with lagged observations to predict acceleration with a Quadratic Lag Model. The models are trained to minimize Mean-Squared-Error using stochastic gradient descent. Additionally, subspace-identification methods are used as a baseline for comparison. The SID model is used to fit a linear dynamical system with a state dimension of 10. The n4sid algorithm scales with data amount, so training is done on 10 subsets of 100 trajectories each. Particle-based EM methods are not feasible for large state-spaces. Prediction errors of the naive model are fitted using a dynamical system with a neural network. Process and observation noise are assumed to have diagonal Gaussian covariance matrices. The NL model uses diagonal Gaussian covariance matrices for \u03c3 w and \u03c3 v as hyperparameters. Expert knowledge of helicopter aerodynamics can enhance a gray-box model trained with SISL. Test RMSE for naive and H25 models can be directly evaluated, while SID and NL models require an estimate of the unobserved state before prediction. EKF is used for next-step prediction in the NL model. The NL model uses extended Kalman filtering for prediction, with better accuracy than other models. The SID model outperforms the H25 model, suggesting a large linear system can approximate a non-linear system. Introducing non-linearity in the NL model improves performance. The NL model improves prediction accuracy by attenuating time-varying errors in the H25 model. SISL effectively identifies non-linear dynamical models of unobserved states affecting an aerobatic helicopter. The algorithm optimizes system parameters based on partial state observations, suitable for high-dimensional and deterministic problems. Our algorithm can effectively identify non-linear dynamical models of unobserved states in high-dimensional and deterministic problems. It outperforms state-of-the-art methods by fitting large non-linear models to unobserved states, such as in the dynamics of an aerobatic helicopter. The algorithm aims to be applied to system identification problems in various domains, including characterizing the dynamics of aircraft with high aspect ratios. The inability to measure friction forces in dynamic interactions involving contact hinders system identification, requiring algorithms capable of identification under partial observation. A dataset gathered by Abbeel et al. (2010) from a gas-powered helicopter flight is used, with controls for cyclic pitch and rotor pitch. Sensor data is fused and downsampled for analysis. The helicopter dynamics are computed using Earth frame accelerations to predict body frame accelerations. The rotation matrix C12 transforms body to Earth reference frame, with linear and angular accelerations f v and f \u03c9 as prediction targets. The model inputs u include state variables v, \u03c9, and control commands \u03b4, while the output y corresponds to predicted values. The neural networks in the models have different hidden layer configurations and optimization methods. The NL model uses SISL with specific parameters for training. The optimization process involves adjusting dynamics and observation parameters with different learning rates. The optimization of Equation (6) is done using a non-linear least squares optimizer with a Trust-Region Reflective algorithm. The optimization process involves using a non-linear least squares optimizer with a Trust-Region Reflective algorithm for efficient solving. Evaluating the test metric requires running an EKF with user-provided parameters. The EKF assumes specific values for initial state, covariance of error, process noise, and observation noise. A well-tuned EKF can converge to accurate estimations quickly. The H25 model drops the first 25 predictions from the EKF when computing RMSE to omit transient behavior."
}