{
    "title": "r1gV3nVKPS",
    "content": "The paper introduces the ballistic graph neural network, which addresses weight distribution in transportation. It does not require eigenvalue calculations and has faster filter propagation compared to traditional graph neural networks. By adjusting the diffusion rate, the network can achieve similar accuracy with fewer parameters. Perturbed filters offer better representations than pure ballistic ones, improving network performance. Graph convolutional networks (GCNs) utilize random walk diffusion for feature extraction on graph-based structures like images and molecules. Researchers have explored bidirectional random walks to capture spatial dependencies and spectral graph theory for filter approximation. Bruna et al. (2013) and Defferrard et al. (2016) use graph Laplacian spectrum and high order polynomials of Laplacian matrix in NN models for learning graphs. Random walk probabilities on vertices are calculated using degree and normalized walk matrices. Graph convolutional networks (GCNs) are effective for learning graph representations. Graph convolutional networks (GCNs) are powerful tools for learning graph representation. Over-smoothing is a common issue faced by GCNs as the depth of layers grows, attributed to the stacking of random walk diffusion-based feature extraction. The convolution in GCNs can be represented as L = I + D 1/2 AD 1/2, where the first part adds self-loops to the node and the latter part is walk-based diffusion. Lazy random walks converge to applying Lk on the initial state, with the distance from the start point converging to Cp k. The random walk method acts as a low pass filter on the graph, with the normalized Laplacian having eigenvalues and eigenvectors. Fourier transformation on a signal on the graph results in different frequency components. The diffusion operator preserves the zero-frequency component after t steps. The diffusion operator in the random walk preserves the zero-frequency component and suppresses high-frequency information. As the depth of the Graph Convolutional Network (GCN) increases, there is an over-smoothing problem where high-frequency information is lost. Analyzing the long-time random walk behavior in the spatial domain shows that as time steps increase, the probability distribution on nodes becomes indistinguishable. The distribution of ballistic walk, different from random walk, puts more weight on distant nodes as time steps increase. This circumvents the indistinguishable problem and increases distance. The shape of the ballistic distribution preserves higher frequency information. Ballistic walk is considered a faster transportation method compared to random walk. The ballistic walk, faster than random walk, distributes weight on distant nodes as time steps increase. To capture correlation between vertices, methods like increasing weight between points (0,0) and (i,j) are used. The authors use two main methods to increase weight between distant nodes: taking steps in analogy to a filter and pooling operations. Different pooling techniques are used to shorten the distance between vertices. As the number of steps increases, the walk diffuses, leading to inefficiency in collecting information. The authors propose the ballistic graph neural network to address the over-smoothing issue in traditional GCN. This method allows for faster collection of correlations by enabling the walker to reach an average distance in k steps. The authors introduce the ballistic graph neural network to overcome over-smoothing in traditional GCN. They demonstrate that the ballistic walk is a faster transportation method for feature extraction, achieving promising performance with fewer parameters. Introducing noise to the coin space during ballistic transportation allows for better correlation collection. The algorithm involves a walker in the position space and a coin in the coin space. The walker in the position space H spatial and a coin in the coin space H c are described using states in Hibert space. The ballistic walk on a regular two-dimensional graph involves four states in the coin space representing move directions and N states in the spatial space representing the walker's position. The inner product and outer product are defined for the vector space. Pseudo-code of the method is provided. The ballistic walk on a 2D regular graph involves four states in the coin space representing move directions and N states in the spatial space representing the walker's position. The experiment uses the ballistic walk as a feature extraction layer for learning graph representations, with MNIST classification as an example. The final layer predicts classes using softmax activation. The Hadamard matrix H is defined, and the initial state is specified. The Hadamard matrix H is defined as 1 p 2 \uf8ff 1 1 1 1, and the initial state is 0 = 1j/2 |\"i + 1/2 |#i 1j/2 | i 1/2 |!i. Figures 6 and 7 compare diffusion between random walk and ballistic diffusion on a 28 \u21e5 28 grid. The ballistic walk shows cohesive behavior and faster transport compared to classical random walk. The ballistic walk has a speed of \u21e0 C, enabling more efficient correlation collection on the graph. At time = 25, a diffusive walk is equivalent to an 8-step ballistic walk. Defferrard et al. (2016) uses 25 steps diffusive filters to approximate a 5 \u21e5 5 kernel. Defferrard et al. (2016) uses 25 steps diffusive filters to approximate a 5 \u21e5 5 kernel with 10 feature maps. They compare this with an 8-step ballistic kernel with the same number of feature maps. The feature maps are then fully connected to 10/32 units and then connected to 10 units for classification. Results on the MNIST dataset using Ballistic filters with K = 8 are compared with traditional diffusion-based graph convolutional network with K = 25. Baselines include random walk for updating representations and Graph Attention Networks (GAT) by Veli\u010dkovi\u0107 et al. (2017) which assigns different weights to different nodes in a neighbourhood. The graph attentional layer changes weight distribution on neighbourhood nodes. Manifold Regularization (ManiReg) by Belkin et al. (2006) proposes a data-dependent geometric regularization method based on graph Laplacian. Graph Convolutional Network (GCN) by Kipf & Welling (2016) conducts layer-wise propagation in hidden layers using a random walk based method. Graph Learning-Convolutional Networks (GLCN) by Jiang et al. (2019) includes graph learning and convolution layers with a final perceptron layer. The ballistic walk is introduced as a faster transport method compared to classical diffusion. By selecting ballistic filters up to K = 8, a 97% accuracy is achieved with 1/3 parameters. The ballistic filters, with up to K = 8, achieve 97% accuracy using fewer parameters compared to spline method with diffusive filters. They efficiently collect correlation and outperform Laplacian filters. The transportation behavior of filters shows two phases: 'trapped to diffusive' and 'diffusive to ballistic'. Ballistic filters excel in the 'diffusive to ballistic' phase, providing linear propagation. As steps increase, Laplacian filters become inefficient, while ballistic filters maintain effectiveness. The linear propagation of ballistic filters ensures gathering long correlation information in a small number of steps. However, drawbacks include sparse sampling in the mid-distance region and going beyond the boundary. The challenge is to generate filters that collect correlation within a specific distance area while avoiding classical diffusion. The goal is to generate filters with a transportation speed between ballistic and classical diffusion, controlling the speed to stay within a restricted distance area. Hadamard transformation is used for ballistic diffusion, but a de-coherence scheme is introduced to perturb ballistic transportation and avoid going beyond boundaries. The noisy perturbation of ballistic transportation using a Hadamard operation slows down filters' coherence, preventing them from dense sampling specific regions. By adjusting randomness and steps, localized filters within a bounded area can be generated. Increasing randomness leads to a decrease in transportation speed, with a controller \u21b5 affecting diffusion speed. The perturbed ballistic walk slows down filters' coherence, allowing for dense sampling of 'meaningful regions' by adjusting randomness and steps. The model architecture includes pure ballistic filters and perturbed filters for improved accuracy. The model architecture includes pure ballistic filters and perturbed filters for improved accuracy. Filters gather correlation information within reasonable regions up to distance<14. Classification accuracy increases to 99.39% when using a mixture of perturbed filters. Ballistic walk filters can be generalized to different coin operators like Hadamard, noisy Hadamard, discrete Fourier operator, or Grover operator. The discrete Fourier operator (DFO) and Grover operator are special forms of randomized filters with transportation speed between ballistic and diffusive filters. They have a speed-up effect compared to classical diffusive filters and retain balanced properties on a general graph. Performance using Grover and DFO filters shows high accuracy levels. The Hadamard coin is balanced and the DFO retains balanced properties on a general graph. Every state in coin space is obtained with equal probability. The Grover operator helps retain signal symmetry and is permutation symmetric. It is not a balanced coin as the probability does not change its propagating directions. A new ballistic graph neural network is introduced to address speed issues in diffusive kernels, focusing on transportation behavior. Ballistic filters show linear transportation behavior and a de-coherence scheme adjusts filter speed, achieving similar accuracy with fewer parameters compared to diffusive filters. Efficiency of ballistic filters can be enhanced by controlling transportation behavior. The efficiency of ballistic filters can be improved by controlling transportation behavior using the coin and shift operators. This approach offers a new perspective for extracting graphical information efficiently. Future work can explore network structure and adding more layers for improved accuracy. Techniques like dropout can also be used to enhance accuracy, and de-coherence can be introduced into the shift operator for better results. Introducing ballistic filters improves transportation behavior by using coin and shift operators, introducing randomness in the spatial domain. Generalizing to graphs can be done by adding self-loops to nodes. Quantum coherence effect ensures fast transportation. Different states in the coin space are independent from spatial behavior. More information on quantum walk can be found in Childs et al. (2003). The classical diffusion involves gaussian low pass and high-pass filters. Ballistic diffusion has steeper edges due to fast transportation. Ballistic filters act as high-pass filters with different sizes depending on walking steps. Ballistic diffusion with a pulse signal shows approximated shape of transportation. The approximated shape of ballistic transportation is related to walking steps. For random walk diffusive transportation, the region from t = \u2327 to t = \u2327 has a gaussian shape. Ballistic diffusion acts like a high pass filter with a 'valley' shape evolving from t = \u2327 to t = \u2327."
}