{
    "title": "HJlNE5rinE",
    "content": "In this paper, two methods, Trace-norm regression (TNR) and Stable Trace-norm Analysis (StaTNA), are proposed to enhance recommender systems with side information. TNR extracts low-rank latent factors from side information driving user preference, while StaTNA captures common drivers and individual user tastes. Performance comparisons on MovieLens datasets show that StaTNA and TNR outperform state-of-the-art models. The increasing user activity on e-commerce and social networks has driven the development of recommender systems for effectively suggesting items matching user interests on popular sites like Amazon.com, YouTube, Netflix, Spotify, and LinkedIn. In highly-rated Internet sites like Amazon.com, YouTube, Netflix, Spotify, LinkedIn, Facebook, Tripadvisor, Last.fm, and IMDb, personalized recommender systems are crucial for user engagement. For example, YouTube uses a recommender system to deliver personalized video recommendations based on user activity. Advancements in deep learning and matrix completion techniques are used to identify common user behavior patterns. In this work, two multi-task learning methods are proposed to enhance recommender systems using contextual side information. The first method utilizes trace-norm regression to extract low-rank latent dimensions from side information that influence user preferences based on context variations. This is achieved by introducing a nuclear-norm regularization penalty term in the model. The proposed recommender framework, StaTNA, utilizes a multi-task regression model to capture latent dimensions representing homogeneous behavior in user groups. It incorporates a sparsity regularization term to account for individual user preferences. StaTNA outperforms state-of-the-art models on MovieLens datasets. The recommender system uses matrices to predict user ratings for movies based on side information. It applies mappings L and S to new movie features to recommend movies to users with high predicted ratings. Before TNR, Soft-Impute BID14 is considered for large-scale matrix completion problems. Soft-Impute BID14 addresses matrix completion problems by minimizing reconstruction error with a bound on the nuclear norm. Trace-norm regression extends this idea to multi-task learning by penalizing large ranks of the coefficient matrix. Stable principal component pursuit (SPCP) combines low-rank matrix L and sparse matrix S for non-contextual modeling. Stable principal component pursuit (SPCP) combines low-rank matrix L and sparse matrix S for non-contextual modeling. In the context of foreground-background separation in video processing, L represents the stationary background while S represents foreground objects. A novel framework called Stable Trace-norm Analysis (StaTNA) is proposed by adding contextual side information, combining trace norm regression and SPCP. The matrix L captures latent homogeneity among user preferences, while S represents idiosyncratic tastes. S can help in being robust to outliers in user behavior. TNR is a special case of StaTNA with \u03bb S = \u221e, making StaTNA more robust than TNR. Computational feasibility for both models is highlighted, with methods like proximal gradient descent or FISTA being used for solving TNR and StaTNA. In our work, we use algorithms like proximal gradient descent and FISTA to solve problems with provable convergence rates. For StaTNA, we apply FISTA to estimate L and S, with modifications proposed for computational complexity. We consider MovieLens 100K and 1M datasets, where each user rates at least 20 movies on a scale of 1-5. MovieLens 1M does not include all MovieLens 100k movies. The dataset includes at least 20 movies with ratings on a scale of 1-5. It is associated with a side information matrix containing movie categories and relevant scores to tags. Two types of side information matrices are obtained: one with one-hot encoding for categorical features and another with GloVe word embeddings for a 300-dimensional categorical representation vector for each movie. The study involves processing side information matrices for movies, resulting in 300-dimensional categorical representation vectors. Two types of side information matrices are used: one with one-hot encoding and another with GloVe word embeddings. The final side information matrix has dimensions n \u00d7 1428. Two experiments are conducted: matrix completion with side information and training models on different types of side information matrices. State-of-the-art models like SVD, Sparse FC, and GC-MC are used as baselines without incorporating side information. Our proposed TNR and StaTNA models, trained on side information, outperform baseline models in matrix completion tasks. Regression is used to predict ratings for new movies based on new side information, with models trained on 80% of data and tested on the remaining 20%. Hyperparameters \u03bb L and \u03bb S are tuned using 10-fold cross validation. Baseline models include Lasso, Elastic Nets, Multi-task Lasso, and Multi-task Elastic Nets BID17. Standard Lasso and Elastic Nets are trained independently for each user. Elastic Nets are trained independently for each user to predict movie ratings. TNR and StaTNA models do not perform as well as state-of-the-art models in MovieLens 100K due to requiring more training data to capture latent structures. StaTNA converges faster and generally performs better than TNR. In Experiment 2, regression is used to predict user ratings for movies, with all StaTNA and TNR models significantly outperforming baseline models. In MovieLens 100K and 1M experiments, StaTNA and TNR models outperform baseline models. StaTNA with GloVe embedding shows the best performance in MovieLens 1M. The StaTNA framework shows promising results for matrix completion and regression tasks. Investigating principal components of the low-rank matrix reveals 6 major common types of user preferences. Based on our analysis, we identified 6 major common types of user preferences, with the first principal component explaining 88.94% of the variability in user ratings. We also introduced alternative methods to avoid computational expenses in solving TNR and StaTNA, detailed in the appendices. Our current studies focus on utilizing movie information as side information. Our current studies focus on utilizing movie information as side information. The StaTNA framework can be extended to incorporate side information for both movies and users. It is compatible with neural networks by including nuclear norm and sparse penalties. We use the (Fast) Iterative Shrinkage-Thresholding Algorithm (FISTA) to solve these problems and introduce optimization oracles for the proximal mapping of the 1 norm. The algorithm to solve StaTNA involves applying FISTA to estimate L and S, with the option to initialize L 0 as the pseudo-inverse of a matrix. For TNR, setting \u03bb S = \u221e in the algorithm forces all S k and \u015c k to 0. To avoid the computational expense of using an SVD oracle in each iteration, two methods are proposed. The proposed method aims to solve StaTNA without using an SVD oracle by introducing a FW-T algorithm inspired by a scalable algorithm on SPCP. This algorithm replaces the proximal mapping of the nuclear norm with a Frank-Wolfe update in each iteration, making the computation more efficient. The objective function is reformulated to ensure feasibility, and the Frank-Wolfe update for matrix L only requires computing the leading singular pairs, which can be done using computationally cheap power iteration. The proposed method introduces a FW-T algorithm to solve StaTNA efficiently without using an SVD oracle. The algorithm replaces the proximal mapping of the nuclear norm with a Frank-Wolfe update, making the computation more efficient. The nonconvex formulation of the problem allows for the use of ADMM to solve it. The abbreviations MTR and MC stand for multitask regression and matrix completion, respectively. Additional information includes experiment figures and top features within principal components PC3 to PC6."
}