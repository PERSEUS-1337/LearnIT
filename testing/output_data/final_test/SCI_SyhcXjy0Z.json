{
    "title": "SyhcXjy0Z",
    "content": "The paper introduces a Deep Convolutional Neural Network (DCNN) to detect users with disguised faces during ATM transactions. The DCNN is trained to identify individuals attempting to conceal their identity in real-time from ATM footage, allowing the ATM to prevent fraudulent transactions. The use of Deep Convolutional Neural Network (DCNN) in ATM security involves high accuracy in feature extraction and classification for various disguises. ATMs face security concerns like phishing and card fraud, prompting the need for user authentication. ATMs have cameras for 24x7 recording to identify fraudulent practices. The security measures in ATM transactions involve investigating fraudulent activities through ATM camera footage to identify imposters. However, the system's effectiveness is compromised by face alterations like wigs and glasses, leading to low success rates. To address vulnerabilities, it is suggested that transactions proceed only if the user's face is undisguised to ensure proper authentication. The proposed system ensures transaction security by checking for undisguised faces using Deep Convolutional Neural Networks. The system will not allow transactions to proceed if the user's face is disguised, preventing imposters from stealing. The proposed system uses Deep Convolutional Neural Networks to detect undisguised faces for transaction security. Previous research has focused on using machine learning for ATM security, including face-based authentication and image processing for identity verification. The current state-of-art mechanisms for transaction security lack implementation and are not feasible due to reliance on extensive user information and computing resources. T. Suganya suggests verifying a transactor's picture after card and PIN verification, but this method is unreliable due to dependence on remote servers and bandwidth. Emergency situations pose challenges for current systems, and Eigenface based methods can be spoofed with face masks. The proposed solution utilizes a Convolutional Neural Network to detect face disguises during transactions at ATMs, preventing fraudulent activities. The DCNN model quickly identifies if a user has a disguised face in real-time, prompting them to remove the disguise before proceeding with the transaction. This method does not require additional data or remote resources, ensuring efficient and secure transactions. The proposed system utilizes a DCNN model to detect face disguises during ATM transactions, ensuring user identity verification. The model is implemented in Python 2.7 using TensorFlow and trained on a dataset of 1986 images with 4 types of disguises. The dataset is manually classified into 3 classes - disguised, undisguised, and partially disguised. The dataset of 1986 images was split into 1500 for training and 486 for testing, with batches of 50 samples used for training cycles. Disguised faces, not recognizable by humans, were labeled as disguised, with 1372 images in this class. Additionally, there were 212 samples of partially disguised faces. The dataset consists of 212 samples of partially disguised faces, with 402 images belonging to the undisguised class. The Rectified Linear Unit (ReLU) activation function is used for modeling neurons, accelerating the convergence of Stochastic Gradient Descent (SGD). The network parameters are initialized with a standard deviation of 0.1. Softmax classification function is used for classification, with cross entropy as the loss measure for training error calculation. Training steps are executed using the tensorflow.train.AdamOptimizer function. The DCNN model utilizes the tensorflow.train.AdamOptimizer function with an initial learning rate of 1e-4 and cross entropy as the cost functions. AdamOptimizer uses moving averages of parameters for faster convergence. The model consists of 3 convolutional layers followed by pooling layers and 2 fully connected hidden layers for feature classification. The output layer uses softmax function for class probabilities. The model architecture includes 3 convolutional layers with varying numbers of feature maps and kernel dimensions, followed by pooling layers and 2 fully connected hidden layers. The network has a total of 9,962,819 trainable parameters for classification. The Deep Convolutional Neural Network model achieved a final accuracy of 90.535% after 60 training cycles. It works efficiently in real-time without needing cloud access, making it advantageous for banking transactions. Training with a large dataset from actual ATMs can further improve its performance."
}