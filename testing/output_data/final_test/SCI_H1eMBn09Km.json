{
    "title": "H1eMBn09Km",
    "content": "This paper introduces a novel approach using Generative Adversarial Networks (GANs) to generate human mobility data in urban areas. The model is trained on ride requests data from major US cities, capturing spatial and temporal patterns. The synthetic data sets produced by the GANs can be valuable for urban mobility research and policy making, addressing privacy concerns. Ride sharing services have transformed urban transportation, becoming a vital part of the economy in large cities. Data from these services can offer valuable insights into traffic and human mobility patterns for intelligent transportation systems. Modeling the variability in ride requests poses a challenge for researchers, especially in cities with high service penetration. Modeling urban mobility variability in cities with ride sharing services is a challenging problem for researchers. Unresolved challenges include optimal algorithms for dynamic pooling of ride requests, real-time preplacement of vehicles, and city-scale traffic congestion prediction and avoidance. Access to large amounts of ride request data is crucial for addressing these challenges and understanding human mobility patterns. Each city has a unique urban mobility pattern influenced by cultural and economic factors. The question of whether models built from ride request data can benefit society without compromising personal privacy motivates further exploration. This work explores using Generative Adversarial Networks (GANs) to generate synthetic ride request data sets that mimic real data. The approach involves treating ride requests as spatial images and using GANs to match properties of the synthetic data with real data. The focus is on generating actual ride requests for spatially and temporally granular intervals, comparing and validating spatial and temporal variations. The study focuses on using GANs to create synthetic ride request data sets that resemble real data. They parallelize and scale GANs training runs using large CPU clusters on AWS to reduce training times significantly. Real ride request data sets are used for comparison and validation, consisting of all ride requests for an entire week in four cities. The study uses GANs to generate synthetic ride request data sets based on real data from four cities. The data includes ride requests for a week, with details such as request time, pickup and drop-off locations. Independent GANs models are trained for pickup and drop-off locations to create synthetic data. In this study, synthetic ride requests are generated using GANs and a graph generator approach. The raw ride request data is temporally and spatially quantized, partitioning the week into 5-minute intervals and the city into small squares. Each square is represented by a pixel in a 2-D image, reflecting the number of ride-locations. The real ride request data set for each city is represented as a time sequence of images, with each image capturing ride requests in a 5-minute interval. Ride request density peaks at 6pm and decreases until 3am, showing distinct spatial and temporal patterns. The ride request data shows dense patches of ride requests shifting spatially over time, reflecting commuter concentrations. A graph models ride requests within 5-minute intervals, evolving in size and density in response to daily and weekly fluctuations. Ride request graphs exhibit the Densification Power Law property, similar to other graphs modeling human behaviors. The ride request graphs for each city exhibit a distinct degree exponent, which quantitatively characterizes the temporal variability of ride request patterns. The number of edges grows exponentially with the number of nodes, and there is also a quantitative characterization of the spatial variability of ride request patterns for each city. The ride request graphs for each city show a distinct degree exponent, quantifying temporal variability. Correlation Fractal Dimension provides statistics on the distribution of points, measuring self-similarity in the spatial distribution of ride requests. The values computed for each city indicate the degree of self-similarity and consistent weekly patterns. The correlation fractal dimension is used to capture spatial variability in ride request patterns for different cities. It varies among cities and helps analyze the dynamics of ride requests over time. The Densification Power Law Exponent and Correlation Fractal Dimension are key parameters for understanding temporal and spatial variability in ride request patterns. Generative Adversarial Networks (GANs) are used to generate synthetic data sets that closely match real data sets in terms of key parameters. Conditional GANs, which sample from a conditional distribution, can be applied to ride request data to create high-quality samples. GANs learn to map random noise to realistic data, enabling the generation of data that is difficult to distinguish from real data. Conditional GANs learn to map noise vector z and label y to output image x, allowing for generation and discrimination of samples based on y. The objective function involves minimizing G against an adversarial D. Images are labeled with the hour of the day for training acceleration using multiple machines. To accelerate training using multiple machines, spatial parallelism is exploited by dividing a city into blocks, each representing a 24\u00d724 pixel image of ride-locations. Separate images are created for pickup and drop-off locations, labeled with the same time interval. The generator network combines images from blocks labeled with the same time interval by stitching them together. It uses a 100-dimensional Gaussian noise sample and a onehot vector encoding of the time snapshot. The network has a single hidden layer with 128 ReLU-activated neurons. The discriminator network also has a single hidden layer with 128 ReLU-activated neurons. Small networks are used for quick and stable convergence between the discriminator and generator. The generator network stitches images from blocks labeled with the same time interval using Gaussian noise and a onehot vector. A classifier network, BID15, is introduced to decode the time information encoded by the generator. The generator is trained on a weighted sum of losses from the classifier and discriminator networks to prevent early saturation. In experiments using MNIST data and BID15, adding a classifier improved training efficiency and resulted in higher quality synthetic data with less training time compared to other conditional GAN architectures. The experiments were conducted on Amazon Web Services using c5.18x instances with specific hardware specifications. The block size for each city was set at 1200 \u00d7 1200 meters, with each block trained separately to avoid increased computational time. The block size for each city is determined by the greater metropolitan area, with the total number of blocks shown in TAB0. To enhance scalability, Ray BID19 from Berkeley is used to parallelize GANs workload across CPU nodes on AWS. Ray provides a Python API for scaling deep learning workloads and supports heterogeneous resources like CPUs and GPUs. Intel's Math Kernel Library (MKL) is also utilized for machine learning operations. Training runs are scaled using 2 to 8 c5.18x instances with Ray. Using Ray, we scale our training runs with 2 to 8 c5.18x instances on AWS, reducing GANs training time significantly. For Los Angeles, training time can be cut from over an hour to less than 20 minutes, and for New York City to just minutes. GPU instances on AWS did not show performance improvements in initial experiments. In this work, GPUs on AWS were utilized for 5.93 hours on a p3.8xlarge instance with NVIDIA's Multi-Process Service (MPS) to maximize GPU utilization. The scalability of GANs workload was achieved using CPU cores supported by Intel's MKL library and Berkeley's Ray framework. The correlation fractal dimension (D2) sets a limit on the number of ride requests in a geographical region, crucial for generating data sets with GANs. Fractal ranges for different cities vary, as shown in TAB3. The fractal range varies for different cities due to their geographical shapes. Los Angeles, with its sprawling nature, requires a larger range to observe self-similar patterns compared to other cities. The correlation fractal dimensions (D2) were measured for four cities over a day, showing similarities between real and synthetic data sets. The correlation fractal dimensions (D2) were measured for real and synthetic data sets, showing similar mean values with some discrepancies. Further investigation is needed to understand these discrepancies. DPL provides a characterization of the temporal evolution of ride requests, with DPL exponent values correlated nicely between real and synthetic data sets. The DPL exponent values \u03b1 correlated nicely with real data sets for New York, Chicago, and San Francisco. Synthetic data for Los Angeles showed a higher exponent value, possibly due to bias towards generating more requests in prominent regions. Temporal variation of ride requests was observed for each hour of a typical weekday in all four cities. The emergence of ride sharing services and extensive data sets are creating opportunities for city-scale data analytics on urban transportation, improving ride sharing efficiency, real-time traffic congestion prediction, and new public services. Neural networks in machine learning enable models to capture human behavior and real-world scenarios. Key contributions include mapping ride requests into images capturing temporal and spatial information. The study introduces a GANs based workflow for generating synthetic ride request data sets for cities, which can be scaled effectively using Xeon CPU clusters on AWS. The generated data sets are validated against real data sets for four major US cities, showing similarities in spatial and temporal properties. Further research avenues include exploring the temporal variability of ride requests in urban areas. The study utilizes GANs to create synthetic ride request data sets for cities, enabling experiments on new algorithms for dynamic ride pooling and real-time traffic congestion prediction. Future research will focus on validating the synthetic data sets and improving GANs models for broader research use."
}