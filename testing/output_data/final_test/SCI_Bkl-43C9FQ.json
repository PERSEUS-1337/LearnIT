{
    "title": "Bkl-43C9FQ",
    "content": "Efficient convolution kernel for CNNs on unstructured grids using parameterized differential operators, focusing on spherical signals like panorama images or planetary signals. We introduce a novel CNN approach using parameterized differential operators for spherical signals, replacing conventional convolution kernels. This allows for efficient estimation on unstructured grids and optimization through back-propagation, resulting in neural networks with superior performance using fewer parameters. Our algorithm is evaluated in various computer vision and climate science tasks, showcasing its effectiveness in shape classification, climate pattern segmentation, and omnidirectional image semantic segmentation. Our unique kernel parameterization enables our model to achieve high accuracy with fewer network parameters, especially for processing signals in the spherical domain. Mapping spherical signals to planar domains results in distortions, making learning with 2D CNNs challenging. Recent works propose network architectures operating in the spherical domain, invariant to rotations in the SO(3) group. In this work, a new convolution kernel for CNNs on arbitrary manifolds and topologies is presented, focusing on applications in the spherical domain approximated by an icosahedral spherical mesh. The kernel is designed to address problems where orientation information is crucial for predictive capability, such as in digit recognition and omnidirectional images. The proposed Parameterized Differential Operators (PDOs) parameterization scheme for CNN convolution kernels, known as MeshConv operator, utilizes only 4 parameters per kernel and outperforms competing methods with fewer parameters. It replaces conventional learnable convolutional kernels by computing \"differences\" using differential operators to establish patterns on unstructured grids. The curr_chunk discusses the application of orientable CNNs in machine learning problems in computer vision and climate science. It highlights the efficiency of the spherical model in 3D classification tasks and spherical image semantic segmentation. The paper also includes an overview of related studies, details of the methodology, empirical assessment of the model's effectiveness, and evaluation of the kernel parameterization scheme. The curr_chunk evaluates design choices for processing spherical signals, focusing on distortions introduced by projecting signals on curved surfaces. Different approaches include using regular convolutions with increased kernel sizes near polar regions, constant kernels sampling points on the tangent plane, and rotational-equivariant implementations. Some works utilize diffusion kernels for parameterized differential operators. Several works utilize the diffusion kernel for efficient Machine Learning and CNNs, with BID20 being among the first to suggest its use on graphs. BID1 proposes Diffusion-Convolutional Neural Networks (DCNN) for convolution on graph structured data, while BID4 generalizes classic CNNs to non-Euclidean domains using oriented anisotropic diffusion kernels. BID9 uses a linear combination of filter banks for equivariant convolution filters, and BID33 explores reparameterizing convolutional kernels with parabolic and hyperbolic differential bases. Geometric deep learning works, like BID6, address similar problems in performing convolutions on manifolds represented by unstructured grids. Other methods parameterize graph convolution kernels in the spectral domain. Performing graph convolution involves parameterizing convolution kernels in the spectral domain, converting the convolution step into a spectral dot product. Convolutions can also be done directly on manifolds using cross-correlation based on geodesic distances. Optimal surface parameterization methods, like seamless toric covers, can be used to analyze genus-zero shapes as 2D signals with conventional planar CNNs. Image semantic segmentation is a well-studied problem in computer vision, with research focusing on planar and equirectangular omnidirectional images. Benchmarking for semantic segmentation of 360 panorama images is also provided. In the 3D learning literature, researchers have explored 3D semantic segmentation. Our method focuses on efficient convolutional operators for spherical domains, specifically panoramic images. We introduce Parameterized Differential Operators to perform convolutions on manifolds approximated by a mesh, reducing parameters and computational complexity compared to traditional methods. Parameterized Differential Operators (PDOs) efficiently estimate first and second order differential operators on mesh surfaces BID24 using only the one-ring neighborhood. Comparisons are drawn to conventional 3\u00d73 convolution kernels in the regular grid domain, showcasing how PDOs can be expressed as linear combinations of basis kernels. The output feature map is a result of the input function cross-correlated with different basis functions, simplifying computations on spherical domains like panoramic images. In Parameterized Differential Operators (PDOs), cross-correlation with basis functions is replaced by differential operators of varying orders on mesh surfaces. These operators approximate local features efficiently using Finite Element basis or Discrete Exterior Calculus. The implementation includes the identity, first derivative, and Laplacian operator. The Laplacian operator on the mesh can be discretized using the cotangent formula, with parameters optimized via backpropagation. The icosahedral spherical mesh BID3 is uniform and accurate. The icosahedral spherical mesh BID3 is a highly uniform and accurate discretization of the sphere. It is obtained by subdividing each face of the unit icosahedron into four equal triangles and reprojecting each node to unit distance from the origin. The mesh resolution is defined by the number of faces, edges, and vertices, with different levels denoted by n f , n e , n v. The neural architectures in the study include classification and regression networks with a common encoder, and a segmentation network with a decoder using transpose convolutions and skip layers. Model architectures and training details for each task are provided in the appendix. Parameterized differential operators were used to replace convolution operators in solving the MNIST digit recognition problem. The study focuses on the MNIST digit recognition problem, comparing different spherical CNN models. The model presented outperforms others by utilizing orientation information, essential for vision tasks. In contrast, a rotational-invariant model struggles to distinguish between certain digits. The study compares spherical CNN models for object classification using the ModelNet40 benchmark. The models preprocess 3D geometries into spherical signals by normalizing and translating meshes, encapsulating them with a bounding sphere, and performing ray-tracing. The data is augmented with channels corresponding to the convex hull of the input mesh. The study compares spherical CNN models for object classification using the ModelNet40 benchmark. The models preprocess 3D geometries into spherical signals by normalizing and translating meshes, encapsulating them with a bounding sphere, and performing ray-tracing. Data is augmented with channels corresponding to the convex hull of the input mesh. The model achieves the best performance across all parameter ranges, with approximately 60% accuracy for the 40-class 3D classification task with a mere 2000+ parameters. Table 2 compares peak performance of models, showing our model is on-par with state-of-the-art models and excels with spherical input signals. We demonstrate semantic segmentation on omnidirectional images from the Stanford 2D3DS dataset, consisting of 1,413 equirectangular images with RGB+depth channels and 13 semantic labels. Our spherical segmentation algorithm is benchmarked against 2D and 3D models on the same data. Figure 5 illustrates the spherical signal rendering process. The experiment setup involves preprocessing data into spherical signals by sampling original images at spherical mesh vertex positions. RGB-D channels are interpolated using bilinear interpolation, and semantic labels are acquired using nearest-neighbor interpolation. Semantic segmentation results are compared with U-Net BID32, FCN8s BID22, spherical S2CNN, and PointNet++ using panoramic RGBD images. The study evaluates network performance using mean Intersection-over-Union (mIoU) and pixel-accuracy metrics. Models are tested under peak performance and parameter efficiency settings by varying model parameters. Results show that spherical segmentation outperforms planar baselines and 3D PointNet++. Visualization of semantic segmentation performance is compared to ground truth and planar baselines. Our model outperforms baseline models in climate pattern segmentation accuracy. It processes full global data for better understanding, achieving higher segmentation accuracy compared to models that train on random crops. The model struggles in complex environments and fails to predict ceiling lights due to incomplete RGB inputs. The network achieves better performance by using full global data for a holistic understanding. An ablation study validates the choice of differential operators for the convolution kernel. Results show that including all differential operator components in the kernel leads to the best accuracy. Increasing the number of differential operators improves network performance, providing more flexibility for the kernel. The MeshConv Operator is a novel method for convolution on unstructured grids using parameterized differential operators as kernels. It shows significant improvements in performance and parameter efficiency for machine learning with spherical signals, especially relevant for omnidirectional signals like those from 3D or LIDAR sensors. Mathematical details for implementing the MeshConv Operator are provided, including the implementation of differential operators. The identity operator requires no additional computation as it replicates the original signal. The MeshConv Operator allows convolution on unstructured grids using differential operators as kernels, providing significant improvements in performance and parameter efficiency for machine learning with spherical signals. The operator utilizes a triangular mesh to discretize surface manifold and compute gradients of scalar functions stored on vertices. The per-face gradient is computed using a linear operator on the per-vertex scalar function. The per-vertex gradient vector is computed as an average of per-face gradients weighted by face area. Per-vertex polar and azimuthal direction fields are easily computed using gradient operators and normalized to unit length. The Laplacian operator is a standard operator in computational. The Laplacian operator is a standard operator in computational and differential geometry. The cotangent formula for computing the mesh Laplacian is provided in Eqn. 5. Details of the derivation can be found in Chapters 6.2 and 6.3 of BID12. Training details include using a batch size of 16 and a total of 61658 parameters. The network is trained with a batch size of 16 and a total of 61658 parameters. Two network architectures are presented, one with the highest accuracy score (full model) and another with low parameter counts (lean model). The full model uses MeshConv(6, 32) and is trained with an initial learning rate of 5 \u00d7 10 \u22123. The network architecture for segmentation at level-5 resolution has a total of 5180239 parameters. The training details include a batch size of 16, initial learning rate of 1 \u00d7 10 \u22122, and the use of the Adam optimizer with weighted cross-entropy loss. The network architecture is similar to the Omnidirectional Image Segmentation task with minor differences. The network is trained with a batch size of 256, initial learning rate of 1 \u00d7 10 \u22122, and Adam optimizer. Weighted cross-entropy loss is used for training. Detailed statistics for 2D3DS semantic segmentation task are provided, along with per-class performance evaluation. Model's runtime is recorded for inference mode and compared with PointNet++. Our model achieves fast and stable runtime in 64 batches, with a significant speedup of nearly 5x compared to the baseline PointNet++. A frame rate of over 339 fps is sufficient for real-time applications. The two planar models for semantic segmentation are slightly modified to take in 4 channels (RGBD) instead of 3, with no additional changes made to the models. The models are trained from scratch using the official implementation of PointNet++. The S2CNN model is modified for semantic segmentation tasks, using 8192 points and data augmentation. The architecture includes S2Conv(4, 64) +BN+ReLU, SO3Conv(64, 15), and AvgPoolGamma for output. Low-resolution images with batch sizes of 2 per GPU are used due to memory constraints."
}