{
    "title": "H1gQY64FwB",
    "content": "Detecting communities in real-life networks is crucial as it influences network functionality. Traditional methods use modularity-based approaches to partition networks based on maximizing edges within partitions. Node embedding techniques represent nodes as vectors for community detection. Existing approaches involve random walks to create node context and optimize vector representations. Incorporating community structure into node embedding approaches can improve cluster effectiveness. Two methods are explored: biased random walks for centrality-preserving embeddings and modularity-based partitioning heuristics for community-aware embeddings. These approaches outperform traditional methods like K-means for community detection in node-embedded vector spaces. Partitioning a network into communities is crucial for analyzing network functionality. Communities represent organizational units in social networks, scientific disciplines in academic publications networks, or functional units in biological networks. Traditional community detection methods aim to maximize internal connectivity and minimize external edges within a community. Graph representation learning aims to maximize internal connectivity and minimize external edges within a community. Approaches such as Perozzi et al. (2014) and Grover & Leskovec (2016) represent nodes as vectors to preserve correlation between topological properties and distance measures in an embedded space. However, random walk based node representation learning may lead to nodes from different communities being represented in close proximity. Node embedding algorithms aim to preserve community structure from discrete to continuous space for effective community detection with clustering algorithms. This involves transforming central nodes in the embedded space to contain vectors representing other community members, ensuring similarity is maintained through distance metrics and inner product calculations. In our study, we explore two methods for transforming central nodes in the embedded space to contain vectors representing other community members. The first method involves a maximum-entropy based biased random walk (MERW) with non-local transition probabilities. The second method investigates traditional community detection approaches on a discrete graph to contextualize nodes for obtaining their embedded representation. The paper explores methods for obtaining embedded representations of nodes in a community structure. It discusses using a modularity-based heuristic and a combination of community-aware embedding approaches. The paper also reviews literature on community detection and node embedding, describes MERW-based node embedding, and presents experimental results and future directions. In conclusion, the paper discusses community detection and node representation learning approaches, focusing on combinatorial methods. It emphasizes the importance of modularity as a measure of graph partition effectiveness. The global objective function is optimized by refining the initial partition iteratively. The modularity, Q, is a measure of the ratio of intra-community edges to total edges in a graph partition. A high Q value indicates significant community structure, with a threshold of 0.3 suggested by Clauset et al. (2004). The 'CNM' algorithm optimizes modularity score by merging communities for significant community structure in a network. The 'Louvain' algorithm assigns nodes to communities for local modularity optimizations. SCDA (Scalable Community Detection Algorithm) maximizes WCC to detect disjoint communities in networks based on triangle structures. SCD uses clustering coefficient in a two-phase procedure to refine community partitions. SPICi constructs communities by starting from high-degree nodes and maximizing clustering performance. SPICi is a community detection algorithm that starts with high-degree nodes and maximizes clustering performance. It differs from 'DPClus' by using a simpler cluster expansion approach and incorporating interaction confidences. Other algorithms like 'LEADE' and 'LPA' also aim to detect communities in networks using different methods. The 'InfoMap' algorithm assigns nodes to communities based on majority neighbor labels, optimizing network encoding for random walker movement. 'WalkTrap' algorithm is a hierarchical clustering method based on node centrality within communities. The 'WalkTrap' algorithm is a hierarchical agglomerating clustering method that uses short random walks to identify communities within a graph. It measures the distance between probability distributions of nodes visited by random walks initiated from member nodes of different sets. In contrast to traditional combinatorial approaches, this work integrates a combinatorial approach with an embedding approach (specifically, node2vec) to transform nodes into real-valued vectors while preserving the graph's topological structure. The transformation function \u03b8 is learned using noise contrastive estimation to preserve the topological structure of nodes in a graph. Popular approaches like node2vec and DeepWalk differ in defining the neighborhood function N(u). Node2vec uses biased random walks to create node embeddings, allowing for simple clustering methods like K-means to partition nodes into clusters in a vector space. Cavallari et al. (2017) proposed an EM-based approach to refine community assignments using node embeddings, aiming for Gaussian mixture model fit and disjoint convex clusters in the embedded space. Our method focuses on community detection using a stochastic transition matrix for graph nodes, with a uniform random walk probability distribution for node transitions. Maximal-entropy random walk (MERW) involves choosing the next node based on a stochastic matrix that maximizes entropy of paths with a given length and end-points. The probability of visiting a node after a certain number of steps in MERW depends only on the number of steps and the end-points, not on intermediate nodes. The choice of the next node in MERW is based on uniformly selecting from alternative paths. MERW's stationary distribution better preserves centrality. Maximal-entropy random walk (MERW) better preserves centrality compared to uniform random walk (URW). MERW random walks tend to stay within the same community, making it less likely to include nodes from different communities in the neighborhood. This can impact the training of node representations in node embedding approaches like node2vec. The two-step approach to node embedding involves using a community detection algorithm on input graphs to preserve community structure. Experiments were conducted on various real-world networks to test the effectiveness of the method. In real-world networks, different networks like Amazon and Youtube are analyzed for community structure using node embedding and community detection algorithms. Amazon is an online commercial network where nodes represent products and edges exist between frequently purchased products. Youtube is a social network where users are nodes and friendships are edges, with user-created groups serving as ground-truth communities. DBLP is a bibliographic network of Computer Science publications where nodes represent authors and edges represent co-authorship. Ground-truth communities are sets of authors who published in the same journal or conference. Networks with more than 3 nodes in each connected component are considered separate communities. Community detection algorithms were implemented on the top 5000 communities, showing degradation in goodness metric after this threshold. The study focused on using ground-truth communities from various networks to evaluate a community detection algorithm. The LFR networks were used, which involve parameters controlling network topology such as degree distribution and community size distribution. The model also includes parameters like number of vertices, average degree, maximum degree, minimum and maximum community size, and mixing parameter. The study varied parameters like k max, c min, c max, and mixing parameter \u00b5 for experimental needs. The critical parameter is \u00b5, indicating node relationships with other communities. Six artificial networks were created with specific parameter settings. Results were averaged over 100 runs to reduce random effects. The Omega Index, a generalization of Adjusted Rand Index, was used for evaluating overlapping clusters. The observed agreement is calculated based on the number of pairs of elements occurring in categories and clusters, while the expected agreement is based on the total number of pairs assigned to categories or clusters. The Average F1 score is a commonly used metric to measure clustering accuracy. The Average F1 score is a metric used to measure clustering accuracy by comparing the best matching ground-truth clusters to the formed clusters. Normalized Mutual Information (NMI) evaluates Mutual Information (MI) by counting common elements in pairs of clusters from the ground-truth and formed clustering. The normalized mutual information measures the similarity between categories and clusters in a clustering, with two common normalization methods. Modularity compares intra-cluster edges in a graph to random graph probabilities. Modularity is a key concept in clustering algorithms, despite its resolution limit. It is defined as k (e kk \u2212a 2 k ) where e kk is the probability of intra-cluster edges and a k is the probability of inter-cluster edges. Performance indices like omega index, modularity, normalized mutual information, and average F1 score determine the quality of detected communities."
}