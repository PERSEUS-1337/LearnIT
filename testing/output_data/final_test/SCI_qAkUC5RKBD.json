{
    "title": "qAkUC5RKBD",
    "content": "Touch interactions on mobile devices are limited in expressiveness. Adding additional degrees of freedom can enhance interaction. A prototype with three pushbuttons on a smartphone case was developed to provide augmented input. The study aimed to understand the effects of learning multiple sets of augmented interactions mapped to different applications. Results showed that all mappings were quickly learned with no reduction in performance. Our work provides new information on the design and use of augmented input in mobile interactions. Touchscreen devices like smartphones lack expressiveness due to limited actions. Adding new degrees of freedom can address this issue. Both Android and IOS devices have augmentations to enhance interaction. Adding new degrees of freedom can enhance interaction with touch devices like smartphones. Android and IOS devices have augmentations for scrolling and selecting. Researchers have proposed various new degrees of freedom, including multi-touch, bimanual input, external buttons, force sensors, back-of-device touch, pen state sensors, screen tilt sensors, and pressure sensors. These additions have been shown to increase the expressive power of interaction with mobile devices. Adding new degrees of freedom can enhance interaction with touch devices like smartphones. Researchers have explored various augmentations, such as multi-touch, bimanual input, external buttons, and sensors. To understand how multiple mappings for a new degree of freedom affect learning and usage, a study was conducted with a prototype device featuring chording buttons for different contexts like shortcuts, color selections, and modes in different applications. The study looked at whether learning multiple mappings with chorded buttons would interfere with accuracy, if learning could transfer to more complex tasks, and if memory of the mappings would be retained over a week. Results showed that learning multiple mappings did not reduce performance, accuracy was maintained, performance transferred to realistic tasks, and memory was retained after one week. The study found that learning multiple mappings with chorded buttons did not reduce performance, accuracy was maintained, and performance transferred to realistic tasks. Memory of the mappings was also retained after one week, showing that augmented input can increase the expressive power of interactions with mobile devices. The framework for augmented interactions suggests ways to enhance interactions by adding states or new degrees of freedom. Chorded input for text entry has been studied for performance and learning, with users able to learn and gain expertise in chorded devices. A study on training with the Twiddler one-handed keyboard showed that users can achieve a typing speed of 26 words per minute after 20 sessions. The study on chorded input for text entry showed that after 20 sessions, users achieved a typing speed of 26 words per minute. Participants who continued training to 25 hours reached a mean typing speed of 47 words per minute. Various methods to reduce training time for novices have been explored, such as using different phrase sets and feedback. ChordTap system demonstrated a chording design for text entry on mobile phones, outperforming multi-tap after the second block of trials. The study on chorded input for text entry showed that users quickly learned and outperformed multi-tap. Different chording methods were explored, including using keypad buttons, tilt sensor, and multi-touch devices for menu selection. Finger-count menus and two-handed marking menus were also examined for efficient text entry on mobile phones. Multitouch marking menus use vision-based finger identification for menu selection. HandMarks is a bimanual technique for selecting menu items. FastTap system uses chorded multiple touches for menu selection. BiTouch system allows touches from both hands. Olafsdottir and Appert developed a taxonomy of multi-touch gestures. Researchers have developed various touch devices and techniques that involve different types of additional input, such as combining pen input with touch, using vocal input, utilizing the back of the device, incorporating tilt state with directional swipe, and leveraging a phone's accelerometers for enhanced touch and motion gestures. Enhanced input methods like one-handed zooming and expressive touch can improve user experience and address issues with interface modes. Persistent and \"spring loaded\" modes can help users remember different modes, with various switching mechanisms proposed. Holding a button in the non-dominant hand was found to be the fastest and most preferred method for mode switching. Some researchers have explored implicit modes for fluid specification without explicit switches, such as using pressure-sensitive \"haptic conviction widgets\" for different confidence levels. Various techniques add new sensing capabilities for additional modes, like pressure sensors for mouse input and pen-based widgets, three-state switches for pop-through buttons, and height sensing for different actions in different layers. Other techniques utilize existing unused sensing for interaction improvements. The study describes the design of a prototype system that adds hardware buttons to a custom-printed phone case for testing learning, interference, and retention. A bumper-style case for an Android Nexus 5 phone was modified to hold circuit boards from three Flic buttons. The Flic buttons were reconfigured with new momentary switches for better usability. This design allows for closer placement of the buttons while still utilizing Flic Bluetooth events. The prototype phone case holds three Flic buttons closer together for better usability. The buttons can be easily pressed without causing fatigue, and the phone case is comfortable to hold. The prototype worked well in study sessions, with no complaints of difficulty pressing the buttons. The prototype phone case with three Flic buttons was easy to hold and press. A wrapper library for Android allowed callback functions to be attached to the buttons. Chords were not difficult to press, but timing issues were noted. Callback functions were put on a short timer to allow for multiple buttons to be depressed before executing the callback. Identifying chords in input systems can be challenging. A 200ms delay was implemented before processing input to account for users not pressing all buttons of a chord simultaneously. Once an input is registered, all buttons must return to their \"off\" states before another input can be produced. This allows the user to specify eight states with three buttons, assuming a default state with no buttons pressed. The study investigated the chording system to explore interference, transfer, and retention of command mappings. Participants were trained on three different mappings: application shortcuts, colors, and text-editing commands. Learning multiple mappings did not interfere with learning rate or accuracy. Participants were trained on three different mappings: application shortcuts, colors, and text-editing commands. They were tested on memory retention and transfer of learned mappings in simulated usage tasks. Participants learned and practiced three different mappings over ten blocks of trials. The system displayed a target item on the screen and asked the user to press the appropriate button combination. Feedback was provided for correct selections, and users could consult a dialog showing the current mapping. Selection time was recorded for each item presented twice per block. The study involved participants learning and practicing three different mappings over ten blocks of trials. The system recorded selection time and incorrect selections. Two applications, Drawing and TextEdit, were used to test the mappings in larger activities. The Drawing application used chord buttons to control line color, with the drawing color set based on the buttons' state. The Drawing application in the study used chord buttons to control line color, with tasks grouped into blocks of 14. Each color appeared twice per block, and a task was considered complete when the participant drew at least one line with the correct color. Participants completed three blocks in total. The TextEdit application involved selecting lines of text and applying manipulations like cutting, pasting, setting style, and changing font size. Each manipulation was mapped to a button combination, with selection implemented as a springloaded mode combined with a touch action. The TextEdit application involved selecting text lines and applying manipulations like cutting, pasting, setting style, and changing font size. Tasks were repeated twice per block, with a total of five tasks. Tasks were judged correct based on styling, with an undo button available for mistakes. The third stage of the study included a memory test with a similar interface. The learning system described above prompted participants to perform 21 commands without feedback on their selections. After the study, 8 participants returned for a memory test and usage tasks one week later. Participants were recruited after initial data collection was complete and were randomly assigned to a mapping-order condition. They completed training tasks for each mapping, filled out an effort questionnaire, and completed memory tests for retention. Participants completed memory tests for retention after filling out a second consent form. They then carried out usage tasks with the chording prototype, while data was recorded for analysis. The main study used two repeated-measures designs to analyze differences across mappings and interference. Memory tests were conducted using a specific design with planned comparisons. ANOVA results were reported with partial etasquared as a measure of effect size. No outliers were removed from the data. The study reported partial etasquared as a measure of effect size. Results were organized around training performance, interference effects, transfer performance, and retention after one week. Overall error rates were low for all mappings. A hardware-based error source was identified during the sessions, affecting accuracy rates. The study identified a hardware-based error source affecting accuracy rates. Observations showed people had button combinations memorized but struggled with producing them on the prototype. Adjusting timeout values and using an embedded microprocessor may improve this issue. Participants found all mappings required low effort, with Apps mapping being perceived as less successful. Colors were reported as the easiest to remember. The study analyzed the performance data of learning multiple mappings. Second and third mappings were faster to learn than the first mapping, indicating no hindrance from already memorized mappings. The study found that adding new mappings for the same buttons did not impair learning or performance. Accuracy was lower with the first mapping compared to the second and third mappings. The memory test showed an overall accuracy of 0.87. The study found that adding new mappings for the same buttons did not impair learning or performance. Accuracy was lower with the first mapping compared to the second and third mappings. The memory test showed an overall accuracy of 0.87. During the usage tasks, accuracy ranged from 0.7 to 0.8 across trial blocks, slightly lower than the training stage. The additional mental requirements of the task may have disrupted people's memory of the mappings, but the overall difference was small. The one-week followup showed that accuracy decayed substantially over one week in the memory test, but participants quickly returned to their previous level of expertise once they started the usage tasks. Overall accuracy dropped to 0.49, with some items as low as 10% accuracy. Only two items maintained accuracy above 0.85. In the usage tasks, participant accuracy recovered considerably after the memory test. The follow-up study showed that participants' accuracy in selection improved significantly in the usage tasks after the memory test. The study highlighted the importance of retention in designing chorded memory-based techniques, suggesting that short training periods may not be sufficient for long-term retention. The study found that participants quickly learned three mappings with 90% accuracy, with no issues from overloading buttons. They were able to transfer their expertise to usage tasks, although performance slightly dropped. Memory test performance was strong, with near 100% accuracy. Retention over one week initially dropped but quickly recovered. The study found that participants quickly learned three mappings with 90% accuracy and were able to transfer their expertise to usage tasks. Memory test performance was strong, with near 100% accuracy. People's success in learning multiple button mappings may be due to different contexts and few conceptual overlaps. The study showed that participants successfully learned three mappings with 90% accuracy and could apply them to usage tasks. There were few conceptual overlaps between the mappings, but people were able to adapt well. Memory test performance was strong, with near-perfect accuracy, indicating that the learned commands were retained. The slight reduction in accuracy during usage tasks was likely due to added complexity, but overall, the difference between training and usage environments was minimal. Further research is needed to explore transfer effects to real-world scenarios. The study successfully demonstrated participants learning three mappings with high accuracy and applying them to tasks. Memory retention was strong, with a slight decay over one week. Future work should focus on broader evaluations and realistic prototype design for augmented input. The study focused on interference, transfer, and retention issues with low realism in tasks. Further work includes testing the system with real tasks in real-world settings using Flic software. Improvements in ergonomics and performance are needed, such as adjusting the timeout to prevent errors and delays in command registration. Future work includes experimenting with different invocation mechanisms and providing feedback during chord production. Participants suggested using external chorded buttons as an eyes-free input mechanism. The button interface allows for changing input modes without shifting visual attention and changing tools without moving the drawing finger. Limited expressiveness in mobile touch interfaces has led to research on augmenting interactions, but issues of interference, transfer, and retention remain poorly understood. Our study focused on understanding interference, transfer, and retention issues in augmented touch interactions using multiple mappings. We developed an augmented phone case with chorded pushbuttons for seven input states, enhancing interaction expressiveness. Through a four-part study, we found that users can learn and maintain expertise in complex tasks with chorded commands. Retention was a key concern, with accuracy dropping over time but quickly restored with use. Our work sheds light on augmenting mobile interactions with simple input mechanisms like chorded buttons."
}