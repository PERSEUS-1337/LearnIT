{
    "title": "rJeDNZq5FE",
    "content": "Small spacecraft now have precise attitude control systems commercially available, allowing them to slew in 3 degrees of freedom and capture images quickly. An algorithmic framework combines orbital mechanics, attitude control, and scheduling optimization to plan the orientation of agile spacecraft in a constellation. The proposed schedule optimization would run autonomously at the ground station and be uplinked to the spacecraft for execution. The algorithm is adaptable to various spacecraft specifications and regions of interest. Modifications allow the algorithm to run onboard small spacecraft for autonomous decision-making. The constellation can autonomously make time-sensitive decisions to capture images using a communication module based on Delay/Disruption Tolerant Networking (DTN). This framework is applied to simulate targeted measurements of precipitation events and urban floods. The agile algorithm shows significant efficiency improvements compared to non-agile and non-DTN constellations. Earth Observation (EO) revisit requirements vary by application, ranging from hourly for disasters to weekly for land cover monitoring. Geostationary satellites offer frequent revisits but at a higher cost. Land cover monitoring is essential, and geostationary satellites provide frequent revisits but with limitations. Lower Earth Orbit satellites offer better resolution but require coordination. Adding agility and autonomy to satellite constellations can improve revisit/response. Scheduling algorithms have been successful for agile Earth Observation missions. The Proba spacecraft demonstrated dynamic pointing for multi-angle imaging of specific ground spots. Scheduling 3-DOF observations for large satellite constellations has been formulated for various projects. Recent advances in small satellite technology have led to literature on scheduling fleet operations. Automated tasking for current sensors as a Sensor Web has been developed to monitor natural disasters. Coordinated planners in simulation can handle a continuous stream of image requests from users. Recent advancements in small satellite technology have led to studies on scheduling fleet operations, including cubesat constellation scheduling and evolutionary algorithms for spacecraft and satellite fleets. Agile constellation scheduling with slew-time variations has shown promising results, but algorithms for real-time onboard execution and inter-sat communication scheduling during imaging operations are lacking. The algorithm BID28 optimizes spacecraft attitude control systems for maximizing image collection. It now includes inter-satellite links and onboard image processing for intelligent decision-making. DARPA's DTN protocol enables agile constellations to respond to dynamic events efficiently. The algorithm optimizes spacecraft attitude control systems for maximizing image collection, including inter-satellite links and onboard image processing. DARPA's DTN protocol enables agile constellations to respond to dynamic events efficiently through autonomous scheduling algorithms. An Observing System Simulation Experiment (OSSE) is used to evaluate the proposed algorithm's benefits in simulated scenarios. The proposed algorithm combines physical models of orbital mechanics, attitude control systems, and inter-satellite links to optimize satellite observation schedules in constellations. Satellites can make observation decisions based on information from other satellites with low latency. The algorithm optimizes satellite observation schedules in constellations by utilizing inter-satellite links for low-latency data exchange. Satellites generate data bundles after scheduled observations, containing ground point information and pre-determined meta-data parameters. The algorithm can run on the ground, allowing for centralized optimization and scheduling of observations. The algorithm optimizes satellite observation schedules in constellations by utilizing inter-satellite links for low-latency data exchange. The centralized optimization reduces redundant observations and onboard processing requirements. The scheduler exchanges information between satellites via peer-to-peer communication or ground networks, enhancing effectiveness in observing transient environments like global urban flooding. The algorithmic framework optimizes satellite observation schedules in constellations by utilizing inter-satellite links for low-latency data exchange. The OM module propagates orbits and computes coverage of regions of interest within a field of regard, providing information to the ACS for computing satellite movement profiles. The Optimization Module (OM) provides power, momentum, and stabilization profiles, as well as line-of-sight availability and inter-satellite distances. The Communication Module computes link budgets and simulates Delay Tolerant Networking (DTN) for bundle delivery between satellites. Bundles exchanged contain GPS time series or new GPS data, with the Optimization Module scheduling when each satellite should capture data. The Optimization Module (OM) works with the ACS and Comm modules to schedule satellite observations and bundle generation for broadcast. Feedback loops exist between the optimizer and comm. module, ACS and optimizer, and OM and optimizer for efficient scheduling. Real-time scheduling is assumed to have a fixed time interval, with other operations scheduled separately. The main revision to the Optimization Module (OM) and Attitude Control System (ACS) modules is the computation of slewing time based on satellite vectors to ground points. The dynamic programming algorithm now uses observable ground points as potential states, and ACS slew time is computed in real-time due to onboard processing constraints. A weighted least squares third-order polynomial is developed to efficiently model satellite mass and ACS specifications. The Optimization Module (OM) efficiently computes slew time based on satellite vectors to ground points, allowing for non-planar angle dependencies. It generates data bundle priority for communication modules, ensuring up-to-date information for the next observing satellite. Delay/Disruption Tolerant Networking (DTN) is a new communication protocol that extends the Internet to users experiencing long delays or disruptions. It defines a bundle layer that efficiently connects networks with different operational environments by encapsulating data units in bundles for transmission. DTN involves transmitting data units in bundles between bundle agents, storing them persistently for safekeeping. This hop-to-hop philosophy differentiates DTN from the Internet's end-to-end sessions. DTN specifications cover network engineering aspects, including core protocols like the Bundle Protocol and Schedule Aware Bundle Routing. The Bundle Protocol and Schedule Aware Bundle Routing Protocol were implemented to estimate bundle movement in a DTN with near-Earth orbiting spacecraft. The DTN model, implemented in Python using Simpy BID24, was applied to study global floods from 1985-2010, identifying flood-prone cities and defining watersheds. The framework demonstrated utility and scalability in addressing episodic precipitation and urban floods. The planning horizon involves 5 cities flooding to varying degrees as modeled by an OSSE nature run. London experiences slower, longer rains causing the Thames to flood, while Dallas faces intense thunderstorms leading to smaller creek flooding. The OSSE covers an 80km x 80km area and does not account for flood-type differences between cities. Riverine flooding in the Atlanta metropolitan area was modeled for a storm event on April 5-6, 2017, using the WRF-Hydro hydrologic model. The model was calibrated to match measured flow at nine U.S. Geological Survey gages in the area. The flood rates were normalized by the 2-year recurrence interval flow rate and transformed to integer values between 1 and 256. High values indicate active flooding areas, where satellite-derived precipitation estimates are crucial to assess flood severity. This process provides expected values for observing points in a region at 15-minute resolutions. The paper uses a statistical model for value recomputation in satellite scheduling. Observing any GP within 15 minutes should have constant cumulative value. Value re-computation is based on OSSE output (absval) and considers diversity of GPs over time. The value of observing a GP can be inversely proportionate to its distance to already observed GPs to maximize spatial spread of information. The algorithm used for satellite scheduling is agnostic to future GP values, allowing for real-time adjustments. A normal distribution with a 2%-8% standard deviation was applied to generate different value functions for each satellite's optimizer. A high fidelity value re-computation model is being developed to replace the statistical model for onboard processing and predictive technology. The proposed optimization algorithm TAB4 uses dynamic programming to optimize the scheduler for each satellite, with a schedule for observing specific targets at different times. The scheduler processes data received through the DTN and updates its knowledge of other satellites, allowing for future planning horizons to be computed in real-time. The proposed optimization algorithm TAB4 utilizes dynamic programming to optimize the scheduler for each satellite by processing data received through the DTN and updating its knowledge of other satellites. It computes future planning horizons in real-time by stepping through GPs within the satellite's field of regard and computing cumulative values for each path. The algorithm mitigates computational load by searching only a practical portion of the space and re-computing values based on executed observations by the constellation. The proposed optimization algorithm TAB4 utilizes dynamic programming to optimize the scheduler for each satellite by processing data received through the DTN. It implements a higher fidelity crosscorrelation function to extend the current OSSE, with advantages including linear runtime proportionate to the number of time steps in the planning horizon and the ability to stop at any given point in the runtime. The proposed optimization algorithm TAB4 uses dynamic programming to optimize the scheduler for each satellite by processing data received through the DTN. It implements a complex value function with non-linear dependencies and multi-system interactions, with algorithmic complexity per satellite per region to be scheduled. The runtime or space complexity does not depend on the size of the constellation for well-spread constellations observing non-polar targets. Integer programming was able to verify the algorithm. The optimization algorithm uses dynamic programming to schedule satellites efficiently, with DP schedules found much faster than IP. Future implementations aim to decouple scheduler runs from value processing for better solution quality. A case study simulating 24 satellites in a 3-plane Walker constellation observing floods over a 6-hour horizon was conducted. The study simulated floods in 5 global regions over a 6-hour horizon using a constellation of 24 satellites in 3 orbital planes. To ensure continuous urban flood monitoring within 6 hours, at least 8 satellites per plane are needed for consistent coverage. Instruments like narrow FOV radars are used for precipitation and soil moisture sensing. The paper presents results for an 8km footprint instrument with a field of regard set at 55 degrees. The scenario will vary in terms of mission epoch and regions of interest, affecting access intervals, observations, bundle traffic, and performance sensitivity. The ACS model, characterized with satellite specs from BID28, is fitted by a polynomial for maneuver time and angle to span. The algorithm can support constraints for larger satellites by replacing the tslew computation model. The DTN protocol stack's performance was evaluated for inter-satellite links, assuming all spacecraft transmit at S-band within 6MHz and a link distance of 6000km. The OM module includes an SSPA delivering up to 5W of RF power and a dipole antenna parallel to the nadir/zenith direction. The link budget assumes antennas operate at the edge of the -3dB beamwidth with a \u00bd LDPC coding scheme, BPSK modulation, SRRC pulse shaping, and NRZ baseband encoding for a pessimistic link performance estimation at 1kbps. Multiple spacecraft with omnidirectional antennas can be in view of each other, especially over the poles. Interference from omnidirectional antennas can occur, especially over the poles. Signal interference is mitigated using multiple access schemes like Frequency or Code Division Multiplexing. The 1kbps data rate is presented by the multiple access scheme to upper protocol layers. Interference can affect DTN's routing layer, which routes data through a time-varying satellite constellation using a simplified Bundle Protocol. The DTN simulation relies on an OM-provided contact plan for routing decisions. The traffic in the constellation is managed based on priority levels, with bundles of observational data generated and broadcasted for every GP observation. The priority levels determine the Time-To-Live (TTL) property of the bundles to minimize congestion and discard stale information automatically. The latency of data bundle delivery over all satellite pairs is compared to the gaps between satellite access to any region. Perfect consensus is achieved despite distributed scheduling on a disjoint graph. End-to-end latency for 8341 bundles over a 6-hour simulation is shown, measuring the time difference between bundle delivery and creation. Multiple access scheme may cause spacecraft to receive unintended bundles. The problem of packet duplication in the system due to physical interference is mitigated by using extension blocks in the Bundle Protocol. Router appends an extension block with the identifier of the intended next hop to prevent exponential replication. Latency is affected by bundle prioritization, with bundles of priorities 1-6 experiencing latencies of ~10s. Priorities 1-6 have latencies of ~10s, with outliers up to 15 minutes. No high priority bundles were dropped. Lower priority bundles experience ~2 minute latencies. Satellites with priority 3 have long enough time to deliver all bundles, resulting in implicit consensus in generated schedules. Latency deteriorates non-linearly with increasing satellites, bundle size, and traffic. Future implementations will consider bundle interference, antenna trade-offs, bundle size variations, and broadcast frequency. The DP-based optimizer maximizes cumulative value per satellite by comparing results from running the algorithmic framework in 2 scenarios: onboard scheduler with re-scheduling every 10 minutes based on power constraints, and ground scheduler with contacts twice an orbit. Lowering contact frequency will decrease quality of results. The onboard scheduler updates GP values based on incoming data bundles, with a potential 4% difference from actual values due to delayed information. This discrepancy mainly occurs in one or two hop connections, but over 95% of GPs in all regions are observed. The centralized run of satellites ensures no overlapping observations, with over 99% of GPs seen. However, there is a 70% average difference between assumed and recorded GP values due to communication latency. This discrepancy highlights the importance of timely value updates in fast-changing environments for better constellation performance. In a case study, a DTN-enabled decentralized solution outperformed a centralized implementation by 21% over 6 hours. The centralized solution may be more valuable with lower transiency or focus on poles. A proposed scheduler can be evaluated for user scenarios. The algorithm took 1% of the planning horizon per satellite to run on MATLAB in a Mac OS X v10.13.6 with a 2.6 GHz processor and 16 GB of 2400 MHz memory."
}