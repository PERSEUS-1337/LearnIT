{
    "title": "r1xRW3A9YX",
    "content": "Multi-relational graph embedding, widely used in knowledge base completion, lacks compatibility with tree-like or cyclic structures. To address this, Riemannian TransE is introduced to embed entities in a Riemannian manifold. Each relation is modeled as a move to a point with specific distance dissimilarities, aligning relations with the data structure. Experiments show that Riemannian TransE achieves good performance with reduced parameters. Multi-relational graph embedding is crucial for social networks and knowledge bases. It involves mapping entities and relations to a space for tasks like clustering and prediction. Knowledge base completion tasks are particularly important, attracting significant attention due to the complexity of knowledge bases. Multi-relational graph embedding is essential for completing knowledge bases. Various methods like tensor-factorization-based approaches require many parameters, leading to the proposal of TransE to reduce parameter complexity. TransE BID2 was proposed to reduce parameters in multi-relational graph embedding. Methods like TransH and TransD also use fewer parameters. Some methods use diagonal matrices to reduce parameters, sharing one embedding space for relations with individual dissimilarity criteria. Recent work has shown that using non-Euclidean space, such as hyperbolic space in Poincar\u00e9 Embedding, can reduce the number of parameters for hierarchical data embedding. Poincar\u00e9 embedding has achieved good graph completion accuracy even in low dimensions like 5 or 10. Other methods for single-relational graph embedding in non-Euclidean space have also shown promising results. The success of methods like TransE and Poincar\u00e9 embedding in multi-relational graph embedding suggests the use of a single shared non-Euclidean manifold with multiple dissimilarity criteria. Embedding in a single tree-like structure compatible with hyperbolic spaces shows promise for achieving low dimensionality. The paper introduces a novel method called Riemannian TransE for multi-relation graph embedding using a non-Euclidean manifold. It aims to address graph completion tasks with low dimensionality and a small number of parameters. The method involves entities being mapped to a shared non-Euclidean space where each relation has its own dissimilarity criterion based on distance. Riemannian TransE replaces parallel vector fields in TransE with vector fields attracted to a point in Riemannian manifolds, achieving good performance in graph completion tasks. Our Riemannian TransE method improves multi-relational graph embedding performance with few parameters by utilizing advantages of TransE. It involves mapping entities and relations into planet and launcher manifolds, respectively. The quality of embedding in multi-relational graph embedding is measured through a score function designed by each method. Embedding is learned to minimize the score function when entities are related and maximize it when they are not. The score function is interpreted as dissimilarity in a satellite manifold, with head and tail launch maps mapping entities and relations. The formulation involves embedding entities, planets, and satellites in a shared space with multiple dissimilarity criteria based on relations. Each entity is associated with a planet and their satellite pairs represent different relations. The planets serve as embeddings of the entities, while dissimilarity between entities is evaluated through their satellites corresponding to relations. An example is TransE BID2 where all entities share the same Euclidean space and launch maps are determined by vector addition. The distance in a norm space is used as a dissimilarity criterion in TransE, where relations are represented as vector additions. The performance of TransE has been exemplified in review papers, showing its simplicity and effectiveness in representing relations through satellite pairs. TransE can be extended to a Lie group, and other methods like TransH, TransR, and TransD use a norm in linear space as a dissimilarity measure. RESCAL uses the negative inner product as a dissimilarity measure. Other methods like DISTMULT, ComplEx, HolE, and ANALOGY are also based on the (negative) inner product dissimilarity. Table 1 displays score functions of various methods for graph embedding, including those based on neural networks and hyperbolic space. Each node in the graph is mapped to a point in hyperbolic space, with dissimilarity measured by a distance function. TransE has been extended to a Lie group embedding method using torus to avoid regularization issues. However, this extension cannot be applied to all manifolds as not all have the structure of a Lie group. A loss function based on negative log likelihood of a Bernoulli model is designed for multi-relational embedding. In this section, Riemannian TransE is formulated by leveraging the advantages of TransE in non-Euclidean manifolds. A Riemannian manifold (M, g) with metric g is considered, with the tangent and cotangent space denoted as T p M and T * p M. The LeviCivita connection is used, and geodesics are defined as curves where the covariant derivative of the tangent vector along the curve is zero. Geodesics on a Riemannian manifold are curves that locally minimize distance. The exponential map Exp moves a point towards a vector, acting as an extension of vector addition. The logarithmic map Log is the inverse of the exponential map. These maps may not always be bijective, requiring appropriate domain limitations. In TransE, a single vector determines head and tail launch maps as a transform. The launch maps in TransE are determined by a single vector w, which is identified with a parallel vector field in Euclidean space. However, in non-zero curvature spaces, there is no parallel vector field, making the extension of TransE non-trivial. The idea proposed is to replace parallel vector fields with vector fields attracted to a point in Riemannian Manifolds. The Riemannian TransE extends TransE by replacing parallel vector fields with vector fields attracted to a point in Riemannian Manifolds. This involves using pairs w r = ( r , p r ) to indicate the length and destination of satellite movement, with p r as the attraction point of relation r. The extension introduces arbitrariness, such as launching the tail satellite instead of the head satellite, while maintaining an equivalent score function. The Riemannian TransE extends TransE by using pairs w r = ( r , p r ) to indicate satellite movement towards a point in Riemannian Manifolds. The models learn relationships between entities and relations, with examples showing proximity between satellites. The original TransE formulation involves vector addition for satellites, while an alternative formulation launches tail satellites. In Riemannian TransE, vector additions are replaced by moving towards a point. Satellites are launched for tail entities and fixed for head entities in the red relation. The attraction points are not at infinity, and entities at higher hierarchy have related entities in lower hierarchy. Satellites of lower hierarchy entities are launched towards their parent, with head satellites moved when r > 0 and tail satellites moved when r < 0. The score function of Riemannian TransE involves moving satellites towards an attraction point. The function is defined by a move transform and is equivalent to TransE when attraction points are at infinity. The model includes an exponential map and logarithmic map for calculations. The exponential and logarithmic maps are necessary for Riemannian TransE on spheres, Euclidean, or hyperbolic spaces. The computation costs are O(D), making stochastic gradient methods effective for optimization. Riemannian gradient methods work better for non-Euclidean embeddings, and in this paper, stochastic Riemannian sub gradient methods with norm clipping are used. In Riemannian TransE, exponential and logarithmic maps are essential for spheres, Euclidean, or hyperbolic spaces. The computation costs are O(D), making stochastic gradient methods effective. Evaluation tasks involve triple classification to predict correctness based on a threshold \u03b8 r. Results are evaluated on FB13 and WN11 datasets, with link prediction task results in Appendix BID15. OpenKE implementations are used for these methods. Results in Appendix BID15 were obtained using OpenKE implementations of various methods. Some missing constraints and regularizers were compensated for in OpenKE. Omitting the constraint of entity planets onto the sphere in TransE improved results. Hyperparameters were determined following each paper. Results in TAB1 show triple classification task results in different dimensionalities. Sphere-based Riemannian TransEs performed well in WN11, even with low dimensionality. Hyperbolic-space-based Riemannian TransEs were more accurate in FB13. The accuracy of Riemannian TransEs in different spaces varied, with hyperbolic-space-based TransEs being more accurate than other methods. Euclidean methods sometimes outperformed non-Euclidean methods. Positive curvature spaces were effective in WN11, while negative curvature spaces performed well in FB13. The study found that Riemannian TransE performed well in different spaces, with hyperbolic spaces being more accurate. The choice of manifold, such as spheres for cyclic structures and hyperbolic spaces for tree-like structures, significantly impacted performance. Riemannian TransE outperformed baseline methods in low dimensionality, but its effectiveness depended on the selected manifold. Future research is needed to determine which manifolds work best for specific scenarios. Future research is needed to clarify which manifolds work well with different types of data and to develop a methodology for selecting the appropriate manifold. Understanding the effectiveness of manifolds can enhance graph completion tasks and provide insights into the global characteristics of a graph. Utilizing subspaces in non-Euclidean space may offer advantages over linear subspace methods like TransH and TransD. The study uses stochastic gradient methods to optimize parameters in different steps. The text discusses the use of stochastic gradient methods for optimizing parameters in Riemannian TransE, with a focus on the stochastic loss function and obtaining a stochastic gradient. The algorithm for Riemannian TransE is presented, along with the application of norm clipping to ensure the norm of the stochastic gradient is smaller than 1. Additionally, the text explains the limitations of defining a parallel vector field on a non-Euclidean manifold and discusses the relationship between parallel vector fields and parallel transform. The text discusses the limitations of defining a parallel vector field on a non-Euclidean manifold. It explains that a parallel transform is determined by the path, not just the origin and destination. An example on a sphere illustrates how different paths result in different mappings of vectors. The text introduces Riemannian manifolds and the exponential and logarithmic maps in these manifolds for implementing Riemannian TransE. It simplifies notation by omitting certain symbols and focuses on the composition of the exponential and logarithmic maps with index raising and lowering. The practical implementation involves using cotangent vectors instead of tangent vectors. In a D-dimensional Euclidean Space, a D-dimensional (unit) sphere is defined by a point set. The distance between two points on the sphere is calculated using the arccosine function. The exponential and logarithmic maps are introduced, along with the projection of the loss function to a cotangent vector in optimization. Models of a hyperbolic space are discussed, which are mathematically equivalent but have different representations. In the hyperbolic space models, the hyperboloid and Poincar\u00e9 disk models are introduced. Formulae are provided for the distance between points in the hyperbolic space using the arcosh function. The exponential and logarithmic maps are also discussed. In the link prediction task, the goal is to predict the head or tail entity based on the relation type and the other entity. Evaluation involves ranking correct test triples and corrupting them by replacing either the head or tail entity. The \"filtered\" setting excludes correct triples from the original graph. Evaluation metrics include Mean Rank (MR) to measure the average rank of correct test triples. In triple classification tasks, the mean rank of correct test triples is evaluated, along with Hits @ n and Mean Reciprocal Rank (MRR) metrics. The classification is based on a score function, with a threshold determined by accuracy in the validation set. WN18, FB15k, WN11, and FB13 datasets are used for link prediction and triple classification tasks. In triple classification tasks, datasets like WN11 and FB13 are used. WN18 and FB15k are originally for link prediction tasks. Riemannian TransE performance is evaluated using different manifolds like Euclidean space, hyperbolic spaces, and spheres. Comparison with baselines like RESCAL is done. We compared our method with baselines such as RESCAL Nickel et al. (2016) using implementations in OpenKE. We implemented additional constraints and regularizers in OpenKE, and found that omitting the entity planets onto sphere constraint in TransE improved results. We also implemented Riemannian TransEs in OpenKE with varying dimensionalities. In the experiments, batch size was fixed to 100 batches and number of epochs to 1000. Norm clipping was applied to limit stochastic gradient norm. The \"bern\" setting was not used, and hyperparameters like learning rate and margin parameter were adjusted. Some methods did not report hyperparameter settings for certain datasets. In the experiments, hyperparameters were adjusted as some methods did not report settings for certain datasets. Default parameters in OpenKE were used when hyperparameters were not mentioned. The Xavier initializer BID9 was used, and optimizers were selected based on each paper's recommendations. The choice of initializer significantly impacted embedding performance, with the Xavier initializer achieving good results. In the experiments, hyperparameters were adjusted using default parameters in OpenKE when not mentioned. Xavier initializer BID9 was used, and optimizers were selected based on paper recommendations. TransD used SGD instead of ADADELTA. Riemannian TransEs followed TransE hyperparameters. Different methods handle reversible triples differently. Projection-based methods like TransH and inner-product-based methods like ComplEx can exploit linear subspaces. TransE without sphere constraint performs well in WN11 and FB13. Inner-product-based methods show good accuracies in WN11 and FB13. Differences between criteria are interesting. MRR and hit@10 are generous for heavy mistakes. Further investigation is needed for inner-product-based methods in trivial relations."
}