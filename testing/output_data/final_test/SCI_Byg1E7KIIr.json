{
    "title": "Byg1E7KIIr",
    "content": "We present a novel spike sorting approach using the Neural Clustering Process (NCP), which incorporates a convolutional spike encoder for optimal clustering of spike waveforms. The NCP model outperforms alternative Bayesian algorithms, identifies more spike templates with clear receptive fields, and accurately recovers ground truth neurons on hybrid test data. Additionally, NCP can handle clustering uncertainty of small spikes through GPU-parallelized posterior sampling. The spike sorting approach using the Neural Clustering Process (NCP) incorporates a convolutional spike encoder for optimal clustering of spike waveforms. NCP outperforms alternative Bayesian algorithms, identifies more spike templates with clear receptive fields, and accurately recovers ground truth neurons on hybrid test data. It can handle clustering uncertainty of small spikes through GPU-parallelized posterior sampling. Spike clustering is a crucial step in spike sorting, grouping similar waveforms into clusters representing neurons. Challenges include nonGaussian waveform clusters, unknown cluster numbers, and lower-SNR uncertainty. Existing Bayesian methods struggle with large datasets. A novel approach is proposed to address these challenges. The proposed novel approach to spike clustering, utilizing the Neural Clustering Process (NCP), offers efficient probabilistic clustering by encoding spike waveforms with a ConvNet and computing full posterior distributions on cluster labels and number of clusters. NCP allows for GPU-parallelized posterior sampling, handling clustering uncertainty and reducing computational costs. The Neural Clustering Process (NCP) offers efficient spike clustering by encoding spike waveforms with a ConvNet and computing full posterior distributions on cluster labels and number of clusters. NCP handles clustering uncertainty, produces multiple plausible clustering configurations, and shows promise for production-scale spike sorting pipelines. The Neural Clustering Process (NCP) encodes spike waveforms with a ConvNet and computes posterior distributions on cluster labels and number of clusters. Spike sorting is done using the functions h and g to encode data into vectors Gk and Q, followed by mapping into a multinomial distribution q\u03b8. Data preprocessing involves spike detection and partitioning by channel based on peak-to-peak amplitude. The NCP architecture utilizes a 1D ConvNet with a ResNet structure for spike sorting, extracting features from spike waveforms for clustering. The NCP architecture uses a ResNet encoder with feature maps and pooling layers. Training for spike clustering involves synthetic data generation with a mixture of finite mixtures model. Spike templates are sampled from ground-truth templates for training. The NCP model utilizes synthetic spike waveforms generated from ground-truth templates for training. Gaussian noise is added to create spatially and temporally correlated noise patterns similar to real data. The model is trained for 20000 iterations with a batch size of 32 and optimized using the Adam optimizer. At inference time, spike waveforms are fed to NCP for probabilistic spike clustering using GPU-parallelized posterior sampling. Beam search with a size of 150 efficiently samples high-likelihood clustering. After training the NCP model on synthetic spike waveforms with added noise, spike waveforms are clustered using GPU-parallelized posterior sampling. A beam size of 150 efficiently samples high-likelihood clustering configurations for 2000 spikes in less than 10 seconds on a single GPU. Spike templates are obtained for each cluster, and the clustering configuration with the highest probability is used in experiments. NCP is compared against vGMFM and Kilosort on synthetic data sets with known ground-truth cluster labels. The NCP model outperforms vGMFM and Kilosort on synthetic data sets with known ground-truth cluster labels. NCP shows 11% higher AMI compared to vGMFM. Real data from a 49-channel, 20-minute retina recording with white noise stimulus was used for clustering, with NCP producing cleaner clusters visually. The NCP pipeline produces clean clusters with distinct spike waveforms compared to vGMFM. RFs extracted by NCP and Kilosort were compared, showing encouraging evidence of real neurons. NCP found 103 templates with clear RFs, 48 of which were not found in Kilosort. Kilosort found 72 templates, 17 of which were not found by NCP. NCP outperforms Kilosort in spike template detection, finding additional templates with clear receptive fields. In a hybrid recording test, NCP recovered more ground-truth spike templates compared to Kilosort and vGMFM, demonstrating superior clustering performance in complex noise environments. Probabilistic clustering of small spikes remains a challenge due to low SNR and uncertainty in cluster assignment. NCP addresses clustering uncertainty in spike sorting by efficiently sampling cluster labels from the posterior, producing multiple plausible results. It achieves high clustering quality, outperforming traditional methods, and can handle low SNR and uncertainty in cluster assignment. Future directions include improving spike encoders and integrating NCP into standard spike sorting pipelines."
}