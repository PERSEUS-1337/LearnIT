{
    "title": "RL32268",
    "content": "An understanding of the fundamentals of modern computer software technology will assist in an understanding of the open source movement. Software programmers typically write softwareprograms using a high level computer language such as Basic, C++, or Java. By using the words,symbols and numbers that make up these high-level computer languages, the programmer tells thecomputer what to do. For instance, the command \"ADD (X, Y)\" instructs the computer to add thevalue of the variable X to the variable Y. A computer program written in this high level languageis said to be in \"source code\" form. (8) Computers are incapable of reading the high-level instructions of source code, however. Rather, the computer responds to binary inputs -- either a \"0\" or a \"1\" -- that correspond to an openor closed electrical switch. The number \"01001101\" might tell a computer to add two numbers andsave the result, for example. Thus, after writing the program in source code, the programmerordinarily uses a compiler program to translate or \"compile\" the source code into the corresponding1s and 0s that the computer can read. Source code that has been compiled into this series of 1s and0s is called \"object code.\" (9) Today, most computer programs are distributed in object code form. This distribution systemis often referred to as the \"proprietary software\" model. When a consumer purchases a copy of, forexample, WordPerfect software, that program comes on a CD-ROM into which the objectcode 1sand 0s have been encoded. One of the reasons that software developers distribute only the objectcode, and not the source code, is convenience. Software in object code format is ready for thecomputer to use. (10) This technique also protects the source code from disclosure. Because skilled programmers can easily read source code, a competitor could review this text in order to find out how a programworks. As a result, if software were distributed in source code form, rival firms could readily takeand reuse parts of the program in competing products. As this report discusses below, (11) thisappropriation of the original programmer's work may violate intellectual property laws. However,such violations may be difficult both to discover and stop. Distributing software in object code formis a more cost-efficient and effective means of preventing this infringement. (12) Some computer users have expressed dissatisfaction with the proprietary software model. End users of proprietary software must ordinarily rely upon the software publisher to fix mistakes in thecode and develop additional features. As free software advocate Richard Stallman has explained,the proprietary software model \"keeps users helpless and divided: the inner workings are secret.\" (13) Stallman further opines that computer users \"should be free to modify programs to fit their needs,and free to share software, because helping other people is the basis of society.\" (14) A loosely organized open source software community has resulted from this reaction to proprietary software development. (15) In contrastto proprietary software, the source code of \"opensource\" software is available to the public. (16) Computer users are therefore able to examine thehuman-readable instructions that the programmer wrote to create the software. A number ofwell-known programs are \"open source,\" including a widely used Internet server program, Apache;a popular Internet programming language, Perl; the program that routes more than 80 percent of allInternet email messages worldwide, Sendmail; the program that is the basis for the domain namesystem, Bind; and the fastest growing operating system in the world, Linux. (17) Due to the open sourcestatus of these programs, members of the public may consult their source code as desired. It is important to note that the term \"open source\" implies more than merely distribution of source code along with the object code. In such circumstances, the publisher could continue to assertits intellectual property rights in the software, thereby limiting the ability of others to modify theprogram or redistribute it. Even though disclosed to the public, the source code would remain underthe control of the publisher. (18) As a result, publishers of open source software ordinarily do more than simply provide copies of both the source code and the object code when they distribute computer programs to the public. In addition, they establish the terms of use of the software by means of a license. A license is acontract through which the publisher allows recipients to use and modify the software, subject tocertain conditions specified in the license. For example, the license might require that anyone whoredistributes the software also make the source code of that software publicly available. Contractsthat provide users with a sufficient set of privileges to access and modify the software's source codeare deemed to be \"open source licenses.\" The practice of preserving the rights of software users through a set of license provisions is sometimes called \"copylefting.\" This term is a play on words on the term \"copyright.\" (19) Under thissystem, the copyright holder licenses the recipient of a copy of the software. The license permits theredistribution of further copies of the software -- including software containing modifications --under the condition that those copies are subject to the same license. This legal framework ensuresthat derivatives of the licensed work remain open. If the licensee fails to distribute derivative worksunder the same license, then he may face legal consequences. In particular, the licensor couldterminate the license, leaving the licensee without permission to copy, distribute, or modify thesoftware. (20) Although no official definition specifies which software licenses qualify as open source licenses, an organization called the \"Open Source Initiative,\" or OSI, has promulgated a widelyfollowed set of standards. (21) OSI describes itselfas a \"non-profit corporation dedicated to managingand promoting the Open Source Definition\" (22) through a certification program that it administers. (23) To satisfy the Open Source Definition, the license must satisfy certain conditions, including: 1. The publisher must provide both object and source code. 2. The publisher must allow modification and redistribution of the code (with or without modifications by the licensee). 3. The publisher must not limit distribution to certain fields of endeavor or products, or limit its use with other free software. (24) A number of different groups have promulgated a variety of open source licenses that OSI has certified as compliant with the Open Source Definition. Among these is the General Public License,or GPL. (25) As compared to the Open SourceDefinition, the GPL imposes additional restrictions uponsoftware publishers. As a result, a license may fulfill the conditions of the Open Source Definitionbut not qualify as a GPL. According to its sponsor, the Free Software Foundation, the GPLguarantees computer users the following \"four freedoms\": The freedom to run the program, for any purpose. The freedom to study how the program works, and adapt it to your needs. The freedom to redistribute copies so you can help your neighbor. The freedom to improve the program, and release your improvements to the public, so that the whole communitybenefits. (26) It is important to note that, in this context, the term \"freedom\" does not mean that the software has to be sold at no charge. Rather, it refers to permissible user activities, and in particular theprinciple that software should be openly available in all of its current and future forms to all thosedesiring to learn or benefit from it. (27) The chief distinction between the Open Source Definition and the GPL is that the Open Source Definition effectively allows users to appropriate privately any modifications that they make. (28) Forexample, under the Open Source Definition, a user could refuse to disclose publicly the source codeof any programs that include the user's modifications. The licensee could also claim intellectualproperty rights in any modifications they introduced into the software. (29) Of course, in such cases,the licensee's software would not qualify as open source. In contrast, the GPL requires that thesource code be kept open to the public, even if the recipient of the software made changes. Also,under the GPL, the licensee cannot restrict the ability of others to build upon any modifications thatthe licensee made. (30) For example, a computer programmer may use software under a license that minimally complies with the Open Source Definition. Suppose further that the programmer modifies thesoftware, and then licenses the object code of the modified version with the additional restriction thatno licensee could copy the modified version's object code. This practice is acceptable under theOpen Source Definition. This practice would not comply with the Free Software Foundation's GPL,however. As we have seen, both proprietary and open source software publishers rely upon theintellectual property laws to sustain their chosen development model. More specifically, the term\"intellectual property laws\" identifies a number of doctrines, including copyrights, patents and tradesecrets, that provide innovators with proprietary interests in their intangible creations. (31) Copyrightprovides authors with exclusive rights in their writings, visual works and other works of authorship;patents relate to products, processes and other useful inventions; while trade secret law concernssecret information that is of commercial value. (32) After briefly identifying the principal policyjustifications for the copyright, patent and trade secret law, this report summarizes the basicworkings of these legal disciplines. By providing individuals with exclusive rights to their inventive products and processes, the intellectual property laws allows authors and inventors to secure the economic benefits of theirdiscoveries. Absent the a system of intellectual property, competitors might readily be able toappropriate the benefits of an innovator's research and development efforts. Aware of thesepotential \"free riders,\" firms might devote few, if any resources towards innovation. Copyrights,patents and trade secrets solve this market failure problem by providing economic incentives forindividuals and institutions to engage in research and development. (33) Intellectual property rights may also facilitate market mechanisms by creating discrete, well-defined property interests that are readily subject to commercial exchanges. (34) Absent patentrights, for example, an inventor may have no tangible asset to sell or license. In addition, an inventormight otherwise be unable to police the conduct of a contracting party. Any technology orknow-how that has been disclosed to a prospective buyer might be appropriated withoutcompensation to the inventor. The availability of patent protection decreases the ability ofcontracting parties to engage in opportunistic behavior. By lowering such transaction costs, thepatent system may make technology-based transactions more feasible. (35) Some commentators have identified natural rights as an additional rationale for the intellectual property laws, and in particular the copyright law. Under this view, individuals enjoy a natural rightof property in the works they have created through their own labors. (36) Intellectual property law mayalso encourage marketplace behavior that is both ethical and efficient. As a matter of fairness andjustice, this view holds, one individual should not be allowed to profit from another's labor andgoodwill. (37) In economic terms, intellectualproperty laws may also stimulate socially desirableactivities that create wealth, including innovation, and discourage costly acts that merely redistributeexisting wealth, such as industrial espionage. (38) The intellectual property system has long been subject to criticism, however. Some observers believe that intellectual property rights encourage industry concentration and create barriers tomarket entry. (39) Others have suggested thatintellectual property rights can actually slow the pace ofinnovation in some circumstances, as competitors are discouraged from pursuing certain researchpathways due to existing proprietary interests. (40) And in an era where digital information can beimmediately disseminated across the globe, the notion that an innovation can be an object ofpossession has been challenged. (41) When analyzing these contending views, it is important to note the lack of rigorous analytical methods available for determining the effect of the intellectual property rights upon the U.S.economy as a whole. The relationship between innovation and intellectual property rights remainspoorly understood. Concerned observers simply do not know what market impacts would resultfrom changing the patent term from its current 20-year period, for example. (42) Consequently, currenteconomic and policy tools do not allow us to calibrate the intellectual property system precisely inorder to produce an optimal level of investment in innovation. Under the federal Copyright Act of 1976, copyright may extend to any original work of authorship, including computer software programs. (43) Copyright protection arises automatically,without the need of the proprietor to take any formal steps. However, authors who register theirworks with the U.S. Copyright Office, (44) and thenplace a notice of copyright on copies of theirworks, (45) are afforded certain advantages whenenforcing their copyrights. Copyright confers a number of exclusive rights to the author or, in some circumstances, to the employer of the author. (46) Most notable is that thecopyright proprietor has the exclusive right to makecopies of the protected work and to distribute it to the public. (47) Each copyright ordinarily enjoys aterm of the life of the author plus 70 years. (48) As with the other intellectual property rights, copyrights do not enforce themselves. Copyright proprietors bear responsibility for monitoring its competitors to determine whether they are usingthe protected work or not. Copyright owners who wish to compel others to observe their intellectualproperty rights must usually commence litigation in the courts.  As with patents and trade secrets, copyrights may be sold or licensed to others. (49) An intellectualproperty license is a grant of permission to use the owner's proprietary interest. It does not conveyownership rights in the intellectual property, which remain with the licensor. A license is necessaryif, without one, the licensee would be liable for infringement if it made use of the subject matter thatis protected by an intellectual property right. In contrast to copyright, patent rights do not arise automatically. Under the Patent Act of 1952, inventors must prepare and submit applications to the U.S. Patent and Trademark Office (\"USPTO\")if they wish to obtain patent protection. (50) USPTOofficials known as examiners then assess whetherthe application merits the award of a patent. (51) In deciding whether to approve a patent application, a USPTO examiner will consider whether the submitted application fully discloses and distinctly claims the invention. (52) In addition, theapplication must disclose the \"best mode,\" or preferred way, that the applicant knows to practice theinvention. (53) The examiner will also determinewhether the invention itself fulfills certain substantivestandards set by the patent statute. To be patentable, an invention must be useful, novel andnonobvious. The requirement of usefulness, or utility, is satisfied if the invention is operable andprovides a tangible benefit. (54) To be judged novel,the invention must not be fully anticipated by aprior patent, publication or other knowledge within the public domain. (55) A nonobvious inventionmust not have been readily within the ordinary skills of a competent artisan at the time the inventionwas made. (56) If the USPTO allows the patent to be issued, the patent proprietor obtains the right to exclude others from making, using, selling, offering to sell or importing into the United States the patentedinvention. (57) The maximum term of patentprotection is ordinarily set at 20 years from the date theapplication is filed. (58) The patent applicant gainsno enforceable rights until such time as theapplication is approved for issuance as a granted patent, however. Once the patent expires, othersmay employ the patented invention without compensation to the patentee. The common law of trade secrets protects valuable, commercially useful information that is the subject of reasonable measures to preserve its secrecy. (59) Maintaining trade secret status ordinarilyrequires the trade secret proprietor to restrict access to the confidential information, requireemployees to promise not to disclose the information, or take other precautions that are prudentunder the circumstances. Computer software may be the subject of trade secret protection so longas these requirements are met. Unlike a copyright or patent, a trade secret is not limited in duration to a fixed number of years. Instead, a trade secret endures so long as the protected information remains commercially valuableand is maintained as a secret. (60) If the trade secretholder ceases to take measures to maintain theconfidentiality of the protected information, or if the information becomes widely available to thepublic, then the trade secret is extinguished. A trade secret is misappropriated when it has been obtained through the abuse of a confidential relationship or improper means of acquisition. (61) Typical cases of trade secret misappropriationinvolve trespass, bribery and theft, as well as breaches of a duty of confidence committed by formeremployees or commercial partners. Unlike the Patent Act, trade secret law does not provide a causeof action against an individual who independently developed or reverse engineered the subject matterof the trade secret. (62) Conflicts potentially arise between open source standards and intellectual property rights. (63) Some observers have expressed concerns that if open source software is incorporated into anotherwise proprietary program, then the terms of the open source license will apply to the entireprogram and defeat intellectual property rights that would otherwise exist. It is also possible that aparty not bound by the terms of an open source license may raise claims of intellectual propertyinfringement based upon the use of software that others believe to be open source. Finally, questionshave arisen regarding the validity and enforceability of open source licenses. This report nextreviews these issues. Certain open source licenses have sometimes been described as \"viral\" in character. (64) Someindividual open source licenses require that the terms of that license apply automatically to each copyof the software, as well as to any modified versions. (65) Some observers have expressed concernsregarding situations where a programmer, perhaps unknowingly, incorporates some open sourceprogram code into a larger software package. In these circumstances, the open source portion of thesoftware could \"contaminate\" the entire program. As a result, even though the publisher intendedthat the program be proprietary, it may be instead be distributed as the open source licensestipulates. (66) In this way, the open source softwarecomponent would trump any intellectual propertyrights that the publisher hoped to claim. Whether a particular open source software is potentially \"viral\" or not depends upon the individual terms of the accompanying open source license. Some commentators have stated that theFree Software Foundation's GPL is one example of a potentially \"viral\" license. (67) Under the GPL,anyone who uses or modifies the software must, upon further distributing that software or amodification of that software, make the source code fully available to the public, free of anyproprietary interest. (68) This limitation preventsthe software written and distributed under the GPLfrom being subject to intellectual property rights. As a result, the GPL maintains the \"open\" natureof the open source code by allowing users to modify and redistribute the software, but requiring thatsuch modifications be made available to anyone under the terms of the GPL. Notably, under certain conditions the GPL allows users to incorporate open source-derived computer programs into proprietary software packages without subjecting the entire package to theGPL. (69) According to the Free SoftwareFoundation, in order to avoid the imposition of the GPLupon the entire program, software publishers \"must make sure that the free and non-free programscommunicate at arms length, that they are not combined in a way that would make them effectivelya single program.\" (70) The Free Software Foundation offers as an example the combination of an editor program and a shell program. (71) To expand upon thisillustration, suppose that an editor program executes textualcommands typed by the user. A shell, or user interface program, might provide a graphical,menu-driven interface so that the user doesn't have to memorize the text commands. The editorcould be a proprietary program. The shell might have been developed for individuals who did notwish to learn the text commands, and distributed under the GPL. As the editor can workindependently of the shell in this example, the proprietary nature of the editor would be maintainedeven though the shell was subject to the GPL. (72) The functional separation of proprietary and open source software provides one avenue for avoiding the broad application of an open source license to an entire software product. Someobservers believe, however, that conformity with this exception imposes substantial complianceburdens. For example, attorneys James A. Harvey and Todd S. McClelland state: It is therefore a good practice to advise clients with respect to procedures designed to segregate software that can be licensed as proprietary from thatwhich must be distributed under an open source license. Developing and maintaining procedures toimplement these administrative tasks can be very difficult in complex developmentenvironments. (73) Views differ on the supposed \"viral\" nature of some open source licenses. Representatives of proprietary software firms have expressed concerns that \"open source is an intellectual-propertydestroyer,\" (74) and have reportedly referred to opensource software as a \"cancer\" and\"un-American.\" (75) Others believe that, in orderfor open source software to remain open to thepublic, all programs derived from an open source original should be treated as open source as well. (76) And, as noted above, some open source licenses take an intermediate position. (77) Although theselicenses require that the original software that is distributed with the license remain open source, theyallow modifications and upgrades to that code to be \"taken private\" and be treated as proprietarysoftware. Some open source licenses, such as the General Public License (GPL), effectively prevent individuals from asserting intellectual property rights in open source software. (78) This restriction onlyapplies to individuals who have consented to these licenses, however. (79) Parties not subject to thatlicense are therefore not necessarily prevented from enforcing their intellectual property rightsagainst individuals who use the software. As a result, even though one individual has distributedsoftware that it has designated as open source, another entity may possibly assert that the softwareinfringes an intellectual property right. Such assertions lead to potential conflicts between theintellectual property rights owner and individuals who believe that the software is open to the public.  For example, suppose that a computer scientist, Alpha, invents a new method of sorting data useful for computer programs. Alpha then files a patent application at the USPTO claiming themethod. Later, a programmer named Beta independently writes a software program that uses thesame data sorting method that Alpha had claimed in his pending application. Unaware of Alpha'spatent application, Beta distributes his own software to the public under the GPL. If the USPTOapproves of Alpha's application, Alpha could assert claims of patent infringement against anyoneusing Beta's software. These users would be subject to legal liability, even though the software wasbelieved to be open source, and even though no one had knowledge of the patent infringement. (80) This scenario is possible not only for open source software, but also for proprietary software. A software publishing firm may also discover that their products infringe a patent or otherintellectual property. However, commercial enterprises may stand in a better position to considerthe intellectual property ramifications of their published software than the more diffuse open sourcecommunity. Such enterprises often perform audits or establish procedures to avoid the use of other'ssoftware in their own products. (81) Members ofthe more loosely organized open source communitymay have less capability to engage in these sorts of efforts. At least one member of the open source community has addressed possible patent issues with respect to open source software. Red Hat, Inc., a well-known distributor of the open sourceoperating system program called Linux, has presented a \"patent promise.\" Red Hat's promise statesin part: Subject to any qualifications or limitations stated herein, to the extent any party exercises a Patent Right with respect to Open Source/Free Software whichreads on any claim of any patent held by Red Hat, Red Hat agrees to refrain from enforcing theinfringed patent against such party for such exercise . . . . (82) This statement appears to immunize users of open source software from claims of patent infringement by Red Hat, subject to certain qualifications. Red Hat's promise expressly does notcover patents owned by anyone else, however. As a result, users of open source softwaretheoretically face the possibility of infringement claims by anyone holding a pertinent patent.  The ongoing litigation between the SCO Group and IBM Corporation offers a notable exampleof third party infringement claims. SCO is the current owner of the source code, as well as certainintellectual property rights, associated with a computer program known as UNIX. (83) UNIX, a widelyused operating system program, coordinates use of the computer's resources (such as its disk driveor a printer) during the computer's operation. (84) Publishers of certain versions of UNIX havedeclared their programs to be open source software. (85) On March 6, 2003, SCO filed a lawsuit against IBM, in part asserting that IBM had misappropriated SCO's trade secrets. (86) Morespecifically, SCO contends that IBM accessed itsproprietary information when it licensed the UNIX software code from SCO and its predecessors. (87) SCO further asserts that IBM then introduced this proprietary UNIX code into its own operatingsystem, AIX, and later into its Linux-based products. (88) IBM has denied these charges and, in turn,has asserted that SCO products infringe IBM copyrights and patents. (89) As of early 2004, two otheropen source software vendors, Novell and Red Hat, had also become party to that litigation or torelated lawsuits. (90) In addition to commencing infringement litigation against IBM, SCO has reportedly sent 1,500 letters to other firms. These letters are said to explain that the recipient's use of Linux could exposethem to liability, and also to extend an offer of a license. (91) The requested fee is reportedly about$700 for each computer using the Linux code. (92) This demand has in turn animated some observers,such as the Electronic Frontier Foundation, to organize protests against SCO. (93) As well, aconsortium of technology companies, including IBM and Intel, have contributed substantial amountsof money towards the \"Linux Legal Defense Fund.\" (94) Contributors intend that these sums be usedto defray the legal expenses of open source software users who face charges of intellectual propertyinfringement. (95) As of the publication date of this report, the lawsuit between SCO and IBM continues in the U.S. District Court for the District of Utah in Salt Lake City. The outcome of this litigation maysignificantly impact users of Linux and other open source software. It also illustrates the potentialtension between intellectual property rights and the open source community. Regardless of theoutcome of this particular case, the SCO-IBM dispute demonstrates the possibility of futureintellectual property infringement claims against open source software, commenced by individualswho claim not to be subject to the license under which the software was distributed. No court has yet ruled on the enforceability of open source software licenses. (96) Some observershave suggested that these agreements may be invalid, however. (97) These commentators point to thedoctrine of federal preemption, which invalidates state laws that are inconsistent with federal laws. (98) Under this view, open source software licenses -- which are enforced through the mechanisms ofstate contract laws -- conflict with the federal copyright statute, and are therefore invalid. (99) The rule of federal preemption derives from the Supremacy Clause of the U.S. Constitution. That provision states that the \"Constitution and the laws of the United States...shall be the supremelaw of the land . . .anything in the constitutions or laws of any State to the contrarynotwithstanding.\" (100) In resolving cases underthe Supremacy Clause, courts typically determinewhether enforcement of a state law would either directly conflict with federal law or frustrate federalpurposes. (101) In addition, section 301 of theCopyright Act expressly exempts state laws \"that areequivalent to any of the exclusive rights within the general scope of copyright\" and that apply to\"the types of works protected by the Copyright Act.\" (102) The ongoing litigation between SCO and IBM may offer a court the opportunity to decide whether the open source license known as the General Public License, or GPL, is preempted by thefederal copyright law. (103) In that litigation, IBMhas in part argued that SCO cannot enforce whateverintellectual property rights SCO owns in Linux due to the terms of the GPL. According to IBM,SCO distributed Linux software under the GPL for many years. IBM observes that the GPLstipulates that software distributed under the GPL must be made available for copying by others. Asa result, IBM has asserted that SCO cannot now demand payment for use of any intellectual propertySCO might own in Linux. (104) In turn, SCO has in part asserted that the GPL is invalid. As part of its argument, SCO has reportedly pointed to section 117 of the Copyright Act. (105) That statute provides that \"it is not [acopyright] infringement for the owner of a copy of a computer program to make or authorize themaking of another copy or adaptation of that computer program provided . . . that such new copy oradaptation is for archival purposes only . . . .\" (106) Stated differently, the Copyright Act permits usersto make a backup copy of their software without fear of infringement liability.  The GPL places limitations upon the ability of users to make copies of GPL-licensed software, however. In particular, the GPL requires that individuals receiving copies of the software alsoreceive copies of the GPL, and that persons making copies of the software be able to access theprogram's source code. (107) The GPL then statesthat \"[a]ny attempt otherwise to copy, modify,sublicense or distribute the Program is void, and will automatically terminate your rights under thisLicense.\" (108) SCO has taken the position thatbecause the GPL conflicts with the Copyright Act, theGPL is preempted and therefore unenforceable. (109) Notably, SCO and IBM have presented a number of other arguments to the court. The court may not need to address this issue to resolve their dispute. (110) This aspect of the SCO-IBM litigationhas nonetheless raised concerns in the open source software community. As explained by journalistWilliam M. Bulkeley: If SCO's argument ultimately wins, free-software advocates worry it would create considerable uncertainty about the legal status of many industryproducts. Although most believe the industry could adapt, companies that use GPL-licensedsoftware might be confronted by surprise copyright claims from software developers. In addition,creation of new programs might be slowed by the confusion. (111) Other observers believe that the possibility of a court striking down the GPL is small. For example, lawyer James Boyle, a member of the faculty of the Duke University Law School, has reportedlydescribed the federal preemption argument as \"simply ludicrous.\" (112) Eben Moglen, a law professorat Columbia University, believes that the federal preemption argument is overly broad. In Moglen'sview, this position would effectively invalidate all software licenses, even those for which peoplepay, and even for proprietary software. (113) Moglen believes it unlikely that a court would wish todispute this longstanding industry practice. (114) Given the wide recognition that intellectual property and the open source movement are ofgrowing importance in the U.S. computer industry, (115) the relationship between these fields is thesubject of increasing attention. The policymakers of the 108th Congress have addressed the opensource movement with respect to cybersecurity and other contexts. Should Congress choose toaddress this area directly, a variety of approaches are available. If the current interface betweenintellectual property rights and the open source movement is considered satisfactory, then no actionneed be taken. Indeed, growing awareness that intellectual property and open source softwarelicenses can sometimes conflict may lead to more sophisticated treatment of intellectual property bymembers of the open source community, as well as continued refinement of the governing law in thecourts. Another approach is to provide governmental assistance to the open source movement in identifying intellectual properties that might bear upon a particular open source software product. For example, the U.S. Patent and Trademark Office could, upon request by a recognized open sourcesoftware publisher or organization, conduct a search of pending patent applications and issuedpatents in order to determine whether these patents might bear upon a particular open sourcesoftware program. This capability would allow members of the open source community to becomemore fully informed of intellectual property rights. It should be noted, however, that a number ofpatent research firms already exist that could conduct such a search for a fee, at least with respectto issued patents and published patent applications. (116) More far-reaching legal reforms are also possible. For example, one recognized source of legal uncertainty for the software industry concerns the enforceability of open source licenses. (117) Alegislative statement concerning the status of these licenses in terms of the federal preemptiondoctrine might allow software firms to make decisions concerning research, investment, and othercommercial activities with more confidence. The allegedly viral nature of open source software presents another source of concern. One possible legislative response is to allow a proprietary software publisher that discovers its productcontains an open source component a fixed period of time to eliminate the open source component. If the publisher removes the open source component within the stipulated grace period, then thesoftware would remain proprietary. Any possible legal reform would be well-advised to recognize that the U.S. software industry is increasingly characterized both by rapid innovation and by a distinct community of knowledgeableusers who wish to \"opt out\" of the intellectual property system. The possibility of intellectualproperty rights, and their attendant license fees and royalties, may provide a significant incentive forfirms to innovate and to distribute software. On the other hand, some computer users believe thatthese incentives are unnecessary, and further hope to maintain a non-proprietary environment ofsoftware distribution and development. (118) These two trends have sometimes led to conflicts betweenexclusive intellectual property rights and open source software. Striking a balance betweenpromoting innovation, on one hand, and accommodating the demands of software developers andusers, on the other, forms an important component of contemporary software policy."
}