{
    "title": "CZ938F7zVF",
    "content": "Text editing on mobile devices can be a tedious process. To perform various editing operations, a user must repeatedly move his or her fingers between the text input area and the keyboard, making multiple round trips and breaking the flow of typing. In this work, we present Gedit, a system of on-keyboard gestures for convenient mobile text editing. Our design includes a ring gesture and flicks for cursor control, bezel gestures for mode switching, and four gesture shortcuts for copy, paste, cut, and undo. Variations of our gestures exist for one and two hands. We conducted an experiment to compare Gedit with the de facto touch+widget based editing interactions. Our results showed that Gedit\u2019s gestures were easy to learn, 24% and 17% faster than the de facto interactions for one- and two-handed use, respectively, and preferred by participants. Text entry is a fundamental input task on almost all computers, including touch-based mobile devices like smartphones and tablets. However, while touch-based text entry has garnered much attention, touch-based text editing has garnered less. Text editing, the process of correcting text, moving and replacing the cursor, selecting character ranges, and performing operations like copy-and-paste, still largely borrows from desktop mouse interactions, leading to certain inefficient editing processes on touch-based mobile devices. Modeless editing operations [18] such as copy, paste, and cut are often handled in a touch+widget [7] manner: to copy text, one must touch exactly on the text to be selected, long-press to trigger \"selection mode,\" drag the selection endpoints to adjust the selection range, and then select \"copy.\" However, the cursor is positioned using tap gestures, which are error prone because of the fat finger problem [20] , especially when text characters are small [1] . Also, users must press long enough to exceed a time threshold to trigger selection mode, and later select \"copy\" in a popup menu to complete the operation. These extra steps significantly slow text editing on mobile touch screens. Moreover, if an editing operation must happen during the text entry process, one must lift one's finger from the keyboard area to directly interact with the text input area, introducing unnecessary round-trips [5, 10, 12] and breaking the flow of typing. Previous work has demonstrated the feasibility of gesture shortcuts. Fuccella et al. [7] designed multiple gestures on the keyboard area for different editing operations. For example, one can perform a swipe gesture to move the cursor, or a \"C\" gesture to copy text. They further introduced a gesture to initiate editing mode to avoid conflict with gesture typing [8] . Building upon their work, we improve the cursormoving and edit-initiating gestures and provide a gestureonly system, Gedit, for most text editing operations on mobile devices. For example, one of Gedit's designs, the ring gesture, is shown in Figure 1 . Our work distinguishes itself from Fuccella et al. [7] and other prior work in four important respects: (1) instead of discrete cursor control (e.g., one swipe gesture yields one cursor movement action), we provide a ring gesture for continuous, reversible cursor control. A significant advantage is that a user can move the cursor over a long range without clutching; (2) rather than using a single tap, we use bezel gestures [17] to enter editing mode, which we show is more distinguishable than a key-press [4] ; (3) we added undo functionality to the gesture set, as undo is heavily used in text editing; and (4) we provide text editing gestures in both one-and two-handed modes, a significant design achievement given the constraints of one-handed use. In our design of Gedit, we were careful to ensure that it remains compatible with gesture typing [13, 22] . And because Gedit respects current interaction techniques, it is deployable on today's mobile systems without causing interference. To evaluate Gedit, we conducted a text editing experiment. Our results show that compared to the de facto touch+widget method of text editing described above, Gedit was faster and preferred, especially for one-handed use. Our goal was to evaluate Gedit on its editing efficiency and users' subjective preferences. The results showed that our gesture interactions sped up the text editing process compared to the de facto editing approach of tapping keys and tapping the text input area to position the cursor (touch+widget). Participants especially appreciated the capability that Gedit's gestures offered for one-handed use. Participants generally enjoyed the Gedit gestures. The major reasons were having a feeling of precise control, convenience, and speed. Many participants also mentioned that the editing gestures such as copy and paste were faster than pointing and holding, and also less tedious to perform. Participants had split preferences on the one-vs. two-handed versions of Gedit. Four participants preferred two-handed Gedit because \"it is more intuitive just like the shortcuts\" (P13), and \"the gestures in double-hand mode are easier to perform\" (P14). Four participants preferred one-handed Gedit because \"it is faster, as I don't need to enter the editing mode with another finger\" (P7). As for different gestures, we noticed that participants usually used the ring gesture to fix typos, while using the flick gestures to select whole words. In this paper, we presented Gedit, a system of on-keyboard gestures for text editing: ring and flick gestures for cursor control and text selection, bezel gestures for mode switching, and letter-like gestures for editing commands. The gestures can be performed in both one-and two-handed modes. Through our formal study, we demonstrated that Gedit sped up the editing process and reduced text entry time, was perceived to require less workload, and was preferred to the de facto method of tapping keys and tapping text input areas."
}